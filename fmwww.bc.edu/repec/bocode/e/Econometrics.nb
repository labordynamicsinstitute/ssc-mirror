(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    151449,       3844]
NotebookOptionsPosition[    147920,       3736]
NotebookOutlinePosition[    148756,       3764]
CellTagsIndexPosition[    148713,       3761]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "(* $Id: Econometrics.m,v. 5.1 2008/03/22 *)\n\n(*:Version: Mathematica 6.0 \
*)\n\n(*:Name: Econometrics *)\n\n(*:Title: Econometric Estimation Package *)\
\n\n(*:Legal:\n  Copyright (c) 1987-2008, David A. Belsley\n*)\n\n(*:Summary:\
\n  Ordinary least squares, block regression, mixed-\nestimation, two-stage \
least squares, and instrumental-variables estimation.  BKW collinearity \
diagnostics.  Facility for White heteroskedasticity-\nconsistent estimated \
variance-covariance matrix.\n*)\n\n(*:Keywords: Econometrics, simultaneous \
systems, collinearity diagnostics  *)\n\n(*:Requirements: No special system \
requirements. *)\n\n(*:Warning: Be sure not to turn off warnings \
Inverse::invc and Inverse::matsq *)\n\n(*:Sources: Econometrics texts, ",
 StyleBox["Principles of Econometrics",
  FontSlant->"Italic"],
 ", Wiley (1971) by H. Theil, and ",
 StyleBox["Conditioning Diagnostics: Collinearity and Weak Data in Regression \
",
  FontSlant->"Italic"],
 "Wiley (1991) by David A. Belsley. *)"
}], "Input",
 PageWidth->PaperWidth,
 InitializationCell->True,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.4150454693267107`*^9, 3.4150454877638817`*^9}, {
  3.415045564654484*^9, 3.415045565142564*^9}, {3.415180331250252*^9, 
  3.415180337153722*^9}, {3.415187474133114*^9, 3.4151874744345217`*^9}},
 AspectRatioFixed->False],

Cell[TextData[{
 "History:\n\[Copyright] David A. Belsley, 1989-2008. Version 5.1 (3/22/08).  \
Department of Economics,\n Boston College and Center for Computational \
Research in Economics and \n Management Science, MIT.  Version 2.0 \
compatible.\n\n(1.0) basic package, published in first issue of ",
 StyleBox["Mathematica Journal",
  FontSlant->"Italic"],
 " 10/88.\n(1.1) adds Mixed Estimation (1/90)\n(1.1.1) adds cosmetic output \
change, y's and x's for 2SLS and IV  (12/11/90)\n(2.0) ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 2.0 compatible.  Uses new formatting in varDCom (10/14/91)\n(2.0.1) \
Includes White heteroskedasticity procedure, and uses QRDecomposition\n       \
  linked to SVD when conditioning gets very bad.  (10/16/91).\n(2.0.2) Allows \
SVD to be chosen through \"algorithm\" option and cleans up calculations\n    \
    of varDCom and VarCovMatrix under different conditions. (10/18/91)\n(2.1) \
Makes all Blocks completely modular (including checkInput[]) and cleans up \
all\n         parameter passes.  Could use Module instead of Block, but does \
not since it\n         runs more slowly. (10/20/91)\n(2.1.1) Corrects default \
labeling problem when using IV[]. (3/1/92)\n(2.2) Includes labeling facility, \
new utilty functions Name[], Call[], and UnCall[], and \n        adds \
labeling to the lag[] and delta[] functions.  Removes Mean[] and \
Correlation[]\n        functions from being viewed outside package. (4/9/92)\n\
(2.2.1) Wholesale cleaning and editing of local variates and parameters.  \
Extraneous\n        parameters and variates removed. (4/15/92)\n(2.2.2) Adds \
second definitions of Name[] and Call[] to allow labeling of matrices and\n   \
     tensors. (4/25/92)\n(2.2.3) Editing and cleanup of code.  Addition of \
v/c Matrix type in display. (5/4/92)\n(2.2.4) Incorporates option labels into \
$PreRead, and protects various symbols. (5/6/92)\n(2.2.5) Further code \
tightening in doSVDbeta, doStats, doVarDCom, labelmaker, do2SData,\n        \
missingObservations, checkInput, and doMixedEstData.  Fixes: handling of \
\"const\" as\n        dependent variate in do2SData; calculation of \
InvRootSigX and xData in \n        doMixedEstData; and matrix check in \
checkInput. (5/14/92)\n(2.2.6) Code tightening in restore[]. As published in \
\"Economic and Financial Modeling\n        with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ",\" H. Varian, Editor, Springer-Verlag (1993) (5/20/92)\n(2.2.7) Adds \
UnName to \"usage\" lists. (2/8/93)\n(2.3)  Alters White HCCM to avoid nxn \
matrix, and applies blow-up factor of n/(n-p).\n\t\t\t\t\t(3/21/93)\n(2.3.1)  \
Change For's changed to Do's in displayOutput[], checkInput[], Name[], \
Call[]. \n         Alter restore[] to use Indeterminate instead of \"na\" \
when filling missing observations\n\t\t\t\t\t(2/26/94)\n(2.3.2) Fix \
correlation[] to return indeterminate with a constant variate argument, and\n \
         simplify Select[] statement in missingObservations[] (8/15/94)\n\
(2.3.3) Changed preread QR to QRFac so it would not conflict with built-in \
system\n\t\t\t\t\tsymbols (2/17/95)\n(2.3.4) Removes option names from \
PreRead and makes them visable through ::usages. \n\t\t\t\t\tQRFac again \
becomes simply QR.  Removes FortranForm from VarDCom output\n\t\t\t\t\tformat \
for singular values. (3/27/95)\n(2.3.5) Adds StringTruncate to format VarDCom \
condition-number output in place of \n\t\t\t\t\tFortranForm, etc. (6/29/95)\n\
(2.3.6) Changes mean[] to use dot rather than Plus[]. (8/9/95)\n(3.0)  Miriad \
changes made to make compatible with Mma. 3.0 (OutputForms needed in \
DisplayOut[];\n\t\tHoldForms required in Name[], lag[], delta[], Call[] \
(11/23/96)\n(4.0) Makes 4.0 compatible; adds occasional Nulls in missing \
parameter places (,, goes to ,Null,); removes extra , in Protect statement\n\
(4.0.1) Adds \"Scaled\" to Condition Indexes in legend of varDCom output. \
(3/23/03)\n(4.0.2) makes minor changes to displayOut[] (D.o.F line needed \
shifting) to accommodate 6.0\n(5.0) Replaces SingularValues[] with \
SingularValueDecomposition[] since the former function is to be phased out in \
future releases. \n           This is accomplished by using a user defined \
function singularValues[] (small s) that calls SingularValueDecomposition[]. \
(3/22/08)\n(5.1) Notebook converted to 6.0 styles (code vs. input for code \
cells); otherwise identical to (5.0). (3/22/08)\n"
}], "Text",
 PageWidth->Infinity,
 Evaluatable->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.415045494903687*^9, 3.415045549221437*^9}, {
  3.415045634378042*^9, 3.4150456375685673`*^9}, {3.4151803540882263`*^9, 
  3.415180379138555*^9}, {3.4151804336296797`*^9, 3.415180538911631*^9}, {
  3.415187481510882*^9, 3.415187535170451*^9}, {3.415270938143825*^9, 
  3.415271021313673*^9}},
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<Econometrics`\>\"", "]"}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "usage"}], " ", "=", " ", 
   "\"\<Reg[y_,x_,opts___] runs a regression of y on\nx.  y is a vector or \
list of vectors, x is a matrix, a list\nof vectors or matrices, or a tensor \
of lists of vectors.\nInclude \\\"const\\\" (quotes are essential here) in x \
list if\nthere is to be an intercept.  y and x may contain missing\n\
observations (any non-numeric entries).\\n\nOptions[Reg] = {displayOutput -> \
True, varDCom -> False,\ndisplayDigits -> 3, varCovMatrix -> OLS (White), \n\
algorithm -> QR (SVD), returnValues -> Level1 (Level2)} \\n\nreturnValues \
Options\n  Level1 = {beta,err,yhat,sig2}  (default)\\n\n  Level2 = \
{beta,err,yhat,sig2,se,vcMat}\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TwoStage", "::", "usage"}], " ", "=", " ", 
   "\"\<TwoStage[y_,yincluded_,xincluded_,\nxexlcuded_,opts___] does two \
stage least squares.  y must\nbe a vector (or 1xn matrix).\\n\nOptions same \
as Reg[]\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IV", "::", "usage"}], " ", "=", " ", 
   "\"\<IV[y_,includedVariables_,instrumentalVariables_,\nopts___] does IV \
estimation.  If number of instVariables\nequals yincluded, instVariables \
become instruments, else\nthe instruments are the yhats of includedy \
regressed on\nincludedx's and instVariables. y must be vector or 1xn\nmatrix.\
\\n\nOptions same as Reg[]\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MixedEstimation", "::", "usage"}], " ", "=", " ", 
   "\"\<MixedEstimation[y_,X_,c_,R_,SigR_,\nSigX_:Null,opts___] does Theil's \
mixed-estimation.  Basic \nmodel is y = Xb + e with constraints c = Rb + v.  \
Var(e) = \nSigX and Var(v) = SigR.  SigX defaults to sig2*I, where sig2\nis \
the estimated variance of e from the OLS estimation of the\nbasic model. If R \
is rectangular, it may be entered with any\norientation. If it is square it \
must be r x p, where r is the\nnumber of constraints and p the number of \
variates. All \nstandard Reg opts apply.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lag", "::", "usage"}], " ", "=", " ", 
   "\"\<lag[list_,n_,m_] creates lags (leads) of list.\nNegative values \
denote leads. lag[list] is list lagged once.\nlag[list,n] is list lagged n \
times. lag[list,n,m] creates a\nmatrix of list lagged n through m>n times. \
\\n\\n\nOptions[labels -> True, lagValue -> Indeterminate]. \\n\nAttributes: \
HoldFirst.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delta", "::", "usage"}], " ", "=", " ", 
   "\"\<delta[x_,n_] forms x-lag[x,n], for the vector x.\\n\\n\n\
Options[labels -> True]. \\n\nAttributes: HoldFirst.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Name", "::", "usage"}], " ", "=", " ", 
   "\"\<Name[x_] assigns the Mma. symbol name of x as \nits label. If x is a \
matrix or tensor, sequential labels based\non the symbol x are attached.\\n\n\
Attributes: HoldFirst.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnName", "::", "usage"}], " ", "=", " ", 
   "\"\<UnName[x_] strips a label, if any, from the \nbeginning of a data \
series.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Call", "::", "usage"}], " ", "=", " ", 
   "\"\<Call[x_,name__] labels data array x with name(s).\nDo not include \
prefex underscore in name. x may be a vector,\nmatrix,or tensor of data \
series. There must be the same\nnumber of names as data series in x. The \
names need not be\nenclosed in quotes. \\n\nAttributes: HoldRest.\>\""}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayOutput", "::", "usage"}], " ", "=", " ", 
   "\"\<Option: default true. False supresses\nscreen display.\>\""}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"varDCom", "::", "usage"}], " ", "=", " ", 
   "\"\<Option: false.  True causes pie matrix of\nconditioning diagnostics \
to be displayed\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"returnValues", "::", "usage"}], " ", "=", " ", 
   "\"\<Option: default Level1.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Level1", "::", "usage"}], " ", "=", " ", 
   "\"\<Option for returnValues giving beta, err, yhat, \nand sig2\>\""}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Level2", "::", "usage"}], " ", "=", " ", 
   "\"\<Option for returnValues giving beta, err, yhat,\nsig2, se, and \
vcMat\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayDigits", "::", "usage"}], " ", "=", " ", 
   "\"\<Option: default 3. Number of digits\ndisplayed beyond decimal point \
in screen display.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"varCovMatrix", "::", "usage"}], " ", "=", " ", 
   "\"\<Option for chosing estimator for the \nvariance/covariance matrix: \
default OLS.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"White", "::", "usage"}], " ", "=", " ", 
   "\"\<Option for heterokedasticity consistent esitmator\nof \
varCovMatrix\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OLS", "::", "usage"}], " ", "=", " ", 
   "\"\<Option for usual estimator of varCovMatrix\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"algorithm", "::", "usage"}], " ", "=", " ", 
   "\"\<Option for chosing matrix decomposition \nprocedure used for solving \
LS problem: default QR. \>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QR", "::", "usage"}], " ", "=", " ", 
   "\"\<Option causing algorithm to use QR decomposition.\>\""}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SVD", "::", "usage"}], " ", "=", " ", 
   "\"\<Option causing algorith to use SVD\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"labels", "::", "usage"}], " ", "=", " ", 
   "\"\<Option: default true.  False prevents lag[] and \ndelta[] from \
applying labels to variates.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lagValue", "::", "usage"}], " ", "=", " ", 
   "\"\<Option: default Indeterminate.  Allows lag\nvalue to be set in lag[] \
and delta[]\>\""}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"$PreRead", " ", "=", " ", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<@\>\"", " ", "->", " ", "\"\<//Name\>\""}], "}"}]}], 
       "]"}], "&"}]}], ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{
    RowBox[{"NumberForm", "::", "sigz"}], ",", 
    RowBox[{"General", "::", "spell"}], ",", 
    RowBox[{"General", "::", "spell1"}]}], "]"}], ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.415225933193797*^9, 3.4152259799236717`*^9}, {
  3.415271044446434*^9, 3.4152710617642317`*^9}},
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reg", "[", 
   RowBox[{"y_", ",", "x_", ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "beta", ",", "sig2", ",", "xx", ",", "se", ",", "n", ",", "g", ",", "p", 
      ",", "missObs", ",", "err", ",", "yhat", ",", "ydata", ",", "xdata", 
      ",", "\n", "\t\t\t\t", "retainedCases", ",", "temp", ",", "xlabels", 
      ",", "ylabels"}], "}"}], ",", "\n", "\t", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", "=", 
           RowBox[{"doRegData", "[", 
            RowBox[{"y", ",", "x"}], "]"}]}], ")"}]}], "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"Return", "[", "False", "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "ydata", ",", "xdata", ",", "n", ",", "p", ",", "g", ",", "missObs", 
          ",", "retainedCases", ",", "ylabels", ",", "\n", 
          "\t\t\t\t\t\t\t\t\t\t\t", "xlabels"}], "}"}], " ", "=", " ", 
        "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"doRegCalculations", "[", 
            RowBox[{
            "ydata", ",", "xdata", ",", "n", ",", "p", ",", "g", ",", 
             "missObs", ",", "\n", "\t\t\t\t\t\t\t", "retainedCases", ",", 
             "ylabels", ",", "xlabels", ",", "opts"}], "]"}]}], ")"}]}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{"Return", "[", "False", "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "beta", ",", "err", ",", "yhat", ",", "sig2", ",", "se", ",", "xx"}],
          "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"missObs", "!=", "0"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"err", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"restore", "[", 
             RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
             "]"}], "&"}], ",", "err"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"yhat", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"restore", "[", 
             RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
             "]"}], "&"}], ",", "yhat"}], "]"}]}]}]}], " ", "\n", "\t", "]"}],
      ";", "\n", "\t\t\t\t\t\t\t\t", "\n", "\t", 
     RowBox[{"doReturn", "[", "opts", "]"}]}]}], "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"must", " ", "not", " ", "have", " ", "semicolon"}], " ", "*)"}], 
   "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "vecx"}], " ", "=", " ", 
   "\"\<Independent variables are not of proper form\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "vecy"}], " ", "=", " ", 
   "\"\<Dependent variable(s) not of proper form\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "doff"}], " ", "=", " ", 
   "\"\<Inadequate degrees of freedom\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "con2"}], " ", "=", " ", 
   "\"\<Constant used twice\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "coll"}], " ", "=", " ", 
   "\"\<X matrix is essentially perfectly collinear; using SVD.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Reg", "::", "ggt1"}], " ", "=", " ", 
   "\"\<Only 1 dependent variable allowed with White varCovMatrix\>\""}], 
  ";"}]}], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "Reg", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"displayOutput", " ", "->", " ", "True"}], ",", " ", 
      RowBox[{"varDCom", " ", "->", " ", "False"}], ",", "\n", "\t", 
      RowBox[{"returnValues", " ", "->", " ", "Level1"}], ",", " ", 
      RowBox[{"displayDigits", "->", "3"}], ",", " ", "\n", "\t", 
      RowBox[{"varCovMatrix", " ", "->", " ", "OLS"}], ",", " ", 
      RowBox[{"algorithm", " ", "->", " ", "QR"}]}], "}"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "doBeta", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"output", " ", "->", " ", "2"}], "}"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SimEqns", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"estimator", " ", "->", " ", "TwoStage"}], "}"}]}], 
  ";"}]}], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"doReturn", "[", "opts___", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"Switch", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"returnValues", "/.", 
      RowBox[{"{", "opts", "}"}]}], "/.", 
     RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", "Level2", ",",
     "\n", "\t\t\t", 
    RowBox[{"Return", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"reduceRank", ",", 
       RowBox[{"{", 
        RowBox[{
        "beta", ",", "err", ",", "yhat", ",", "sig2", ",", "se", ",", "xx"}], 
        "}"}]}], "]"}], "]"}], ",", "\n", "\t\t", "_", ",", "\n", "\t\t\t", 
    RowBox[{"Return", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"reduceRank", ",", 
       RowBox[{"{", 
        RowBox[{"beta", ",", "err", ",", "yhat", ",", "sig2"}], "}"}]}], 
      "]"}], "]"}]}], "\n", "\t", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"doRegCalculations", "[", 
   RowBox[{
   "yMat_", ",", "xMat_", ",", "n_", ",", "p_", ",", "g_", ",", "missObs_", 
    ",", "retainedCases_", ",", "\n", "\t\t\t\t\t\t\t\t\t", "ylabels_", ",", 
    "xlabels_", ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "beta", ",", "psinvX", ",", "r", ",", "err", ",", "yhat", ",", "xx", ",",
       "sig2", ",", "se", ",", "rsqr", ",", "rbar2", ",", "runcen"}], "}"}], 
    ",", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"beta", ",", "psinvX", ",", "r"}], "}"}], " ", "=", " ", 
      RowBox[{"doBeta", "[", 
       RowBox[{"yMat", ",", "xMat", ",", "opts"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"err", ",", "yhat"}], "}"}], " ", "=", " ", 
      RowBox[{"doErr", "[", 
       RowBox[{"yMat", ",", "xMat", ",", "beta"}], "]"}]}], ";", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"xx", " ", "=", " ", 
           RowBox[{"doVarCovMatrix", "[", 
            RowBox[{"r", ",", "psinvX", ",", "err", ",", "g", ",", "opts"}], 
            "]"}]}], ")"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Return", "[", "False", "]"}]}], "\n", "\t", "]"}], ";", "\n", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sig2", ",", "se", ",", "rsqr", ",", "rbar2", ",", "runcen"}], 
       "}"}], " ", "=", " ", "\n", "\t\t", 
      RowBox[{"doStats", "[", 
       RowBox[{
       "yMat", ",", "yhat", ",", "err", ",", "xx", ",", "n", ",", "p", ",", 
        "g", ",", "opts"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"displayOutput", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"displayOut", "[", 
        RowBox[{
        "beta", ",", "se", ",", "err", ",", "sig2", ",", "n", ",", "p", ",", 
         "g", ",", "missObs", ",", "retainedCases", ",", "\n", "\t\t\t\t\t\t",
          "rsqr", ",", "rbar2", ",", "runcen", ",", "ylabels", ",", "xlabels",
          ",", "opts"}], "]"}]}], "\n", "\t", "]"}], ";", "  ", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varDCom", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"doVarDCom", "[", 
        RowBox[{"r", ",", "p", ",", "xlabels"}], "]"}]}], "\n", "\t", "]"}], 
     ";", "\n", "\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "beta", ",", "err", ",", "yhat", ",", "sig2", ",", "se", ",", "xx"}], 
       "}"}], "]"}]}]}], "\n", "\t\t", 
   RowBox[{"(*", " ", 
    RowBox[{"Note", ":", " ", 
     RowBox[{
     "all", " ", "values", " ", "returned", " ", "here", " ", "are", " ", 
      RowBox[{"matrices", " ", "--"}], " ", "even", "\n", "\t\t\t", "if", " ",
       "row", " ", 
      RowBox[{"matrices", " ", "--"}], " ", "not", " ", 
      RowBox[{"vectors", ".", " ", "reduceRank"}], " ", "is", " ", "used", 
      "\n", "\t\t\t", "at", " ", "doReturn", " ", "to", " ", "reduce", " ", 
      "ranks", " ", "if", " ", 
      RowBox[{"needed", "."}]}]}], " ", "*)"}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"doBeta", "[", 
   RowBox[{"yMat_", ",", "xMat_", ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q", ",", "r", ",", "beta"}], "}"}], ",", "\n", "\t", "\n", "\t",
     
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"algorithm", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", "SVD", ",",
        "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "q"}], "}"}], " ", "=", " ", 
        RowBox[{"doSVDbeta", "[", 
         RowBox[{"xMat", ",", "opts"}], "]"}]}], ",", "\n", "\t\t", "_", ",", 
       "\t", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q", ",", "r"}], "}"}], " ", "=", " ", 
         RowBox[{"QRDecomposition", "[", 
          RowBox[{"Transpose", "[", "xMat", "]"}], "]"}]}], ";", "\n", 
        "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "[", 
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{"q", " ", "=", " ", 
              RowBox[{
               RowBox[{"Inverse", "[", "r", "]"}], ".", "q"}]}], ",", "True", 
             ",", 
             RowBox[{"Inverse", "::", "invc"}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"Inverse", "::", "matsq"}]}], "]"}], "]"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"Reg", "::", "coll"}], "]"}], ";", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", "q"}], "}"}], " ", "=", " ", 
            RowBox[{"doSVDbeta", "[", 
             RowBox[{"xMat", ",", "opts"}], "]"}]}]}]}], "\n", "\t\t\t", 
         "]"}]}]}], "\n", "\t", "]"}], ";", "\t\t", "\n", "\t", 
     RowBox[{"beta", " ", "=", " ", 
      RowBox[{"yMat", ".", 
       RowBox[{"Transpose", "[", "q", "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
     
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"output", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "doBeta", "]"}]}], ",", "\n", "\t\t", "1", 
       ",", "\n", "\t\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"beta", ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], "]"}], ",", "\n", "\t\t", "2", ",", 
       "\n", "\t\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"beta", ",", "q", ",", "r"}], "}"}], "]"}]}], "\n", "\t", 
      "]"}]}]}], " ", "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Returns", ":", "\n", 
      RowBox[{"If", " ", "SVD", " ", 
       RowBox[{"used", ":", "\n", "\t", 
        RowBox[{
        "q", " ", "is", " ", "unscaled", " ", "pseudo", " ", "inverse", " ", 
         "of", " ", 
         RowBox[{"xMat", ".", "\n", "\t", "r"}]}]}]}]}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", "sv", ",", "normx"}], "}"}]}], ",", " ", 
    RowBox[{
    "where", " ", "v", " ", "and", " ", "sv", " ", "are", " ", "scaled", " ", 
     "if", " ", "varDCom", " ", "is", "\n", "\t   ", "opted"}], ",", " ", 
    RowBox[{"unscaled", " ", "otherwise"}], ",", " ", 
    RowBox[{"and", " ", "normx", " ", "is", " ", "the", " ", "scaling", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"set", "\n", "\t   ", "to", " ", 
        RowBox[{"{", "}"}], " ", "when", " ", "there", " ", "is", " ", "no", 
        " ", "scaling"}], ")"}], ".", "\n", "\t   ", "\n", "If"}], " ", "QR", 
     " ", 
     RowBox[{"used", ":", "\n", "\t", 
      RowBox[{
      "q", " ", "is", " ", "unscaled", " ", "pseudo", " ", "inverse", " ", 
       "of", " ", "xMat"}]}]}], ",", "\n", "\t", 
    RowBox[{
    "r", " ", "is", " ", "unscaled", " ", "R", " ", "matrix", " ", "from", 
     " ", 
     RowBox[{"QR", ".", "\n", "\t", "\n", "If"}], " ", "QR", " ", "cannot", 
     " ", "return", " ", "an", " ", "R", " ", "matrix", " ", "of", " ", 
     "full", " ", "rank"}], ",", " ", 
    RowBox[{"a", " ", "message", " ", "is", " ", "given"}], ",", "\n", 
    RowBox[{
    "and", " ", "the", " ", "SVD", " ", "procedure", " ", "is", " ", 
     "automatically", " ", 
     RowBox[{"invoked", ".", "\n", "\t", "\n", 
      RowBox[{"Uses", ":", "\n", "\t", 
       RowBox[{"q", " ", "is", " ", "fed", " ", "to", " ", 
        RowBox[{"doVarCovMatrix", "[", "]"}], " ", "for", " ", "computation", 
        " ", "of", " ", "\"\<White\>\"", "\n", "\t  ", "VC", " ", "Matrix", 
        " ", "when", " ", 
        RowBox[{"opted", ".", "\n", "\t", "r"}], " ", "is", " ", "fed", " ", 
        "to", " ", 
        RowBox[{"doVarCovMatrix", "[", "]"}], " ", "for", " ", "computation", 
        " ", "of", " ", "\"\<OLS\>\"", "\n", "\t  ", "VC", " ", 
        RowBox[{"Matrix", "."}], "\n", "\t  ", "*", " ", "when", " ", "r", 
        " ", "contains", " ", "SVD", " ", "triple"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"doVarCovMatrix", "[", "]"}], " ", "rescales", "\n", "\t    ", 
     "to", " ", "obtain", " ", "proper", " ", "VC", " ", 
     RowBox[{"matrix", ".", "\n", "\t", "r"}], " ", "is", " ", "also", " ", 
     "fed", " ", "to", " ", 
     RowBox[{"doVarDCom", "[", "]"}], " ", "for", " ", "collinearity", " ", 
     RowBox[{"diagnostics", "."}], "\n", "\t  ", "*", " ", "when", " ", "r", 
     " ", "is", " ", "R", " ", "matrix"}], ",", " ", 
    RowBox[{
    "it", " ", "is", " ", "scaled", " ", "there", " ", "and", " ", "used", 
     " ", "in", " ", 
     RowBox[{"SVD", "."}], "\n", "\t  ", "*", " ", "when", " ", "r", " ", 
     "is", " ", "SVD", " ", "triple"}], ",", " ", 
    RowBox[{
    "v", " ", "and", " ", "sv", " ", "are", " ", "already", " ", "scaled", 
     " ", "and", "\n", "\t    ", "are", " ", "used", " ", "directly", " ", 
     "in", " ", "calculating", " ", "collinearity", " ", 
     RowBox[{"diagnostics", "."}]}]}], "\n", "*)"}]}]}], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"doSVDbeta", "[", 
   RowBox[{"xMat_", ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", ",", "sv", ",", "v", ",", "normx", ",", "S", ",", 
      RowBox[{"scaling", " ", "=", " ", 
       RowBox[{
        RowBox[{"varDCom", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}]}]}], "}"}], ",", "\n", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", "scaling", "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"normx", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{"EuclideanNorm", ",", "xMat"}], "]"}]}], ";", "\n", "\t\t", 
        
        RowBox[{"S", " ", "=", " ", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"1.0", "/", "normx"}], "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{"normx", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "sv", ",", "u"}], "}"}], " ", "=", " ", 
      RowBox[{"singularValues", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "[", "scaling", "]"}], ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"xMat", "/", "normx"}], ",", "\n", "\t\t\t\t\t\t", "xMat"}],
          "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"tolerance", " ", "->", " ", 
         RowBox[{"10.", "^", 
          RowBox[{"-", "30"}]}]}]}], "]"}]}], ";", "\n", "\t\t\t\t", "\n", 
     "\t", 
     RowBox[{"u", " ", "=", " ", 
      RowBox[{
       RowBox[{"Transpose", "[", "v", "]"}], ".", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"1", "/", "sv"}], "]"}], ".", "u"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{"pseudo", " ", "inv"}], " ", "*)"}], "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", "scaling", "]"}], ",", "\n", "\t\t", 
       RowBox[{"u", " ", "=", "\t", 
        RowBox[{"S", ".", "u"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"v", ",", "sv", ",", "normx"}], "}"}], ",", "u"}], "}"}], 
      "]"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"note", ":", " ", 
      RowBox[{
      "u", " ", "is", " ", "the", " ", "unscaled", " ", "pseudo", " ", 
       "inverse", " ", "now"}]}], ",", "\n", "\t\t", 
     RowBox[{
     "but", " ", "v", " ", "and", " ", "sv", " ", "are", " ", 
      "\"\<scaled\>\"", " ", "if", " ", "varDCom", " ", "has", " ", "been", 
      " ", "chosen"}]}], " ", "*)"}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.415181304722949*^9, 3.4151813114329*^9}},
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"doErr", "[", 
   RowBox[{"yMat_", ",", "xMat_", ",", "beta_"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"yhat", ",", "err"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"yhat", " ", "=", " ", 
      RowBox[{"beta", ".", "xMat"}]}], ";", "\n", "\t", 
     RowBox[{"err", " ", "=", " ", 
      RowBox[{"yMat", "-", "yhat"}]}], ";", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"err", ",", "yhat"}], "}"}], "]"}]}]}], "\n", "]"}]}]], "Code",\

 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"doVarCovMatrix", "[", 
   RowBox[{"r_", ",", "psinvX_", ",", "err_", ",", "g_", ",", "opts___"}], 
   "]"}], " ", ":=", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"note", ":", " ", 
     RowBox[{
     "r", " ", "can", " ", "be", " ", "either", " ", "the", " ", "R", " ", 
      "matrix", " ", "if", " ", "QR", " ", "was", " ", "used", " ", "in", " ",
       
      RowBox[{"doBeta", "[", "]"}]}]}], ",", "\n", 
    RowBox[{"or", " ", "the", " ", "tensor", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", "sv", ",", "normx"}], "}"}], " ", "if", " ", "the", 
     " ", "SVD", " ", "was", " ", 
     RowBox[{"used", ".", " ", "See"}], " ", "note", " ", "\n", 
     "accompanying", " ", 
     RowBox[{"doBeta", "[", "]"}], " ", "for", " ", "further", " ", 
     "information"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xx", ",", "S", ",", "p", ",", "n"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varCovMatrix", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", "White", 
       ",", "\n", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"g", "!=", "1"}], "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"Reg", "::", "ggt1"}], "]"}], ";", "\n", "\t\t\t\t", 
          RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p", ",", "n"}], "}"}], " ", "=", " ", 
           RowBox[{"Dimensions", "[", "psinvX", "]"}]}], ";", "\n", 
          "\t\t\t\t", 
          RowBox[{"p", " ", "=", " ", 
           RowBox[{"n", "/", 
            RowBox[{"(", 
             RowBox[{"n", "-", "p"}], ")"}]}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"xx", " ", "=", " ", 
           RowBox[{"p", "*", 
            RowBox[{"psinvX", ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"reduceRank", "[", "err", "]"}], "^", "2"}], "*", 
               RowBox[{"Transpose", "[", "psinvX", "]"}]}], ")"}]}]}]}]}]}], 
        "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", "_", ",", "\t", "\n", 
       "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MatrixQ", "[", "r", "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"r", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], ">", "0"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"S", " ", "=", " ", 
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"1.0", "/", 
               RowBox[{"r", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"xx", " ", "=", " ", 
             RowBox[{"S", ".", 
              RowBox[{"Transpose", "[", 
               RowBox[{"r", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"1", "/", 
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "]"}], ".", 
              RowBox[{"r", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ".", "S"}]}]}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"xx", " ", "=", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"r", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", "\n", 
             "\t\t\t\t\t\t\t", 
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"1", "/", 
               RowBox[{
                RowBox[{"r", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "]"}], ".", 
             RowBox[{"r", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "\t\t\t\t", "]"}], 
         ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"xx", " ", "=", " ", 
           RowBox[{"Inverse", "[", "r", "]"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"xx", " ", "=", " ", 
           RowBox[{"xx", ".", 
            RowBox[{"Transpose", "[", "xx", "]"}]}]}]}]}], "\n", "\t\t\t", 
        "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
     RowBox[{"Return", "[", "xx", "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"doStats", "[", 
   RowBox[{
   "yMat_", ",", "yhat_", ",", "err_", ",", "xx_", ",", "n_", ",", "p_", ",", 
    "g_", ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "i", ",", "sigEE", ",", "sig2", ",", "se", ",", "rsqr", ",", "rbar2", 
      ",", "runcen"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"sigEE", " ", "=", " ", 
      RowBox[{
       RowBox[{"err", ".", 
        RowBox[{"Transpose", "[", "err", "]"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"n", "-", "p"}], ")"}]}]}], ";", "\t\t", "\n", "\t", 
     RowBox[{"sig2", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"sigEE", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "g"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"se", " ", "=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "p"}], "}"}]}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varCovMatrix", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", "White", 
       ",", "\n", "\t\t\t", 
       RowBox[{"se", " ", "=", " ", 
        RowBox[{"{", "se", "}"}]}], ",", "\n", "\t\t", "_", ",", "\n", 
       "\t\t\t", 
       RowBox[{"se", " ", "=", " ", 
        RowBox[{
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"Sqrt", "[", "sig2", "]"}], "]"}], ".", 
         RowBox[{"Table", "[", 
          RowBox[{"se", ",", 
           RowBox[{"{", "g", "}"}]}], "]"}]}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"rsqr", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"correlation", "[", 
          RowBox[{
           RowBox[{"yhat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"yMat", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "g"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"rbar2", " ", "=", " ", 
      RowBox[{"1.0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"n", "-", "p"}], ")"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1.0", "-", "rsqr"}], ")"}]}]}]}], ";", "\n", "\t", 
     RowBox[{"runcen", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"yhat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"yhat", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "/", 
         RowBox[{
          RowBox[{"yMat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"yMat", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "g"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"sig2", ",", "se", ",", "rsqr", ",", "rbar2", ",", "runcen"}], 
       "}"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayOut", "[", 
   RowBox[{
   "beta_", ",", "se_", ",", "err_", ",", "sig2_", ",", "n_", ",", "p_", ",", 
    "g_", ",", "missObs_", ",", "retainedCases_", ",", "\n", "\t\t\t", 
    "rsqr_", ",", "rbar2_", ",", "runcen_", ",", "ylabels_", ",", "xlabels_", 
    ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "dw", ",", 
      RowBox[{"er", " ", "=", " ", "err"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"Do", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<Dependent variable is \>\"", ",", 
          RowBox[{"ylabels", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], " ", "]"}], ";", "\n", 
       "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"missObs", "!=", "0"}], "]"}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"er", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"restore", "[", 
               RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
               "]"}], "&"}], ",", "er"}], "]"}]}], ";", "\n", "\t\t\t", 
          RowBox[{"dw", " ", "=", " ", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"Plus", ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"er", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "-", 
                   "\n", "\t\t\t\t", 
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"er", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], ")"}], "^", "2"}], ",", 
                "NumberQ"}], "]"}]}], "]"}], "/", 
            RowBox[{"Apply", "[", 
             RowBox[{"Plus", ",", "\n", "\t\t\t\t", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"er", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
                "NumberQ"}], "]"}]}], "]"}]}]}]}], ",", "\n", "\t\t\t", 
         RowBox[{"dw", " ", "=", " ", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Plus", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Drop", "[", 
                 RowBox[{
                  RowBox[{"er", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "-", 
                "\n", "\t\t\t\t", 
                RowBox[{"Drop", "[", 
                 RowBox[{
                  RowBox[{"er", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"-", "1"}]}], "]"}]}], ")"}], "^", "2"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n", "-", "p"}], ")"}], "*", 
             RowBox[{"sig2", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}], "\n", "\t\t", 
        "]"}], ";", "\n", "\t", "\n", "\t\t", 
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<RSquared = ``  RBarSquared = ``\>\"", ",", "\n", "\t\t\t", 
          RowBox[{"rsqr", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"rbar2", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ";", "\n", "\t\t", 
       
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<R2uncentered = ``  SER = ``\>\"", ",", "\n", "\t\t\t", 
          RowBox[{"runcen", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"sig2", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], " ", "]"}], "]"}], ";", 
       "\n", "\t\t", 
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<Num of Observations = ``  Degrees of Freedom = ``\>\"", ",", 
          "n", ",", 
          RowBox[{"n", "-", "p"}]}], "]"}], " ", "]"}], ";", "\n", "\t\t", 
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<dw = `` with `` missing obs.\>\"", ",", "\n", "\t\t\t", "dw", 
          ",", " ", "missObs"}], "]"}], " ", "]"}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"varCovMatrix", "/.", 
             RowBox[{"{", "opts", "}"}]}], "/.", 
            RowBox[{"Options", "[", "Reg", "]"}]}], ")"}], "==", "White"}], 
         ",", "\n", "\t\t\t", 
         RowBox[{
         "Print", "[", "\"\<Variance-Covariance Matrix: White\>\"", "]"}]}], 
        " ", "]"}], ";", "\n", "\t\t", 
       RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\n", "\t\t", "\n", 
       "\t\t", 
       RowBox[{"Print", "[", 
        RowBox[{"PaddedForm", "[", 
         RowBox[{
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"beta", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"se", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"beta", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/", 
               RowBox[{"se", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"TableDirections", "->", 
             RowBox[{"{", 
              RowBox[{"Row", ",", "Column"}], "}"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"TableSpacing", "->", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"TableHeadings", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<       coef.\>\"", ",", "\n", "\t\t\t", 
                 "\"\<     st. err.\>\"", ",", "\"\<         t\>\""}], "}"}], 
               ",", "xlabels"}], "}"}]}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{
             RowBox[{"displayDigits", "/.", 
              RowBox[{"{", "opts", "}"}]}], "/.", 
             RowBox[{"Options", "[", "Reg", "]"}]}]}], "}"}]}], "]"}], "]"}], 
       ";", "\t\t", "\n", "\t\t", 
       RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"g", "<", 
          RowBox[{"Length", "[", "ylabels", "]"}]}], ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"only", " ", "if", " ", "2", "SLS", " ", "or", " ", "IV"}], 
          " ", "*)"}], "\n", "\t\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Instruments:\>\"", ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"ylabels", ",", "1"}], "]"}]}], "]"}]}], "\n", "\t\t", 
        "]"}], ";", "\n", "\t\t", 
       RowBox[{"Print", "[", "\"\< \>\"", "]"}]}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"i", ",", "g"}], "}"}]}], "]"}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{
  3.415044210540516*^9, {3.4150443275674267`*^9, 3.4150443495187063`*^9}, 
   3.415044464874298*^9, 3.415044778232397*^9, {3.415045053105358*^9, 
   3.4150450705582523`*^9}},
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"doVarDCom", "[", 
   RowBox[{"r_", ",", "p_", ",", "labels_"}], "]"}], " ", ":=", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"note", ":", " ", 
     RowBox[{
     "this", " ", "function", " ", "can", " ", "receive", " ", "its", " ", 
      "parameter", " ", "r", " ", "in", " ", "two", " ", 
      RowBox[{"forms", ":", "\n", 
       RowBox[{
       "r", " ", "can", " ", "either", " ", "be", " ", "the", " ", "R", " ", 
        "matrix", " ", "from", " ", "the", " ", "QR", " ", "decomposition", 
        " ", "if", " ", "this", "\n", "was", " ", "used", " ", "in", " ", 
        RowBox[{"doBeta", "[", "]"}]}]}]}]}], ",", " ", 
    RowBox[{"or", " ", "the", " ", "tensor", " ", 
     RowBox[{"{", 
      RowBox[{"v", ",", "sv", ",", "normx"}], "}"}], " ", "if", " ", "the", 
     " ", "SVD", " ", "was", " ", "\n", 
     RowBox[{"used", ".", " ", "It"}], " ", "is", " ", "first", " ", 
     "determined", " ", "below", " ", "which", " ", "of", " ", "these", " ", 
     RowBox[{"prevails", ".", " ", "\n", "\n", "See"}], " ", "note", " ", 
     "accompanying", " ", 
     RowBox[{"doBeta", "[", "]"}], " ", "for", " ", "further", " ", 
     "information"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", "sv", ",", "v", ",", "vMat", ",", "condind"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MatrixQ", "[", "r", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"v", " ", "=", " ", 
         RowBox[{"r", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"sv", " ", "=", " ", 
         RowBox[{"r", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"Transpose", "[", "r", "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"temp", "/", 
          RowBox[{"Map", "[", 
           RowBox[{"EuclideanNorm", ",", "temp"}], "]"}]}]}], ";", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v", ",", "sv", ",", "temp"}], "}"}], " ", "=", " ", 
         RowBox[{"singularValues", "[", 
          RowBox[{"temp", ",", 
           RowBox[{"tolerance", "->", 
            RowBox[{"10", "^", 
             RowBox[{"-", "30"}]}]}]}], "]"}]}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"vMat", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Transpose", "[", "v", "]"}], ".", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"1.0", "/", "sv"}], "]"}]}], ")"}], "^", "2"}]}], ";", "\n",
      "\t", 
     RowBox[{"vMat", " ", "=", " ", 
      RowBox[{"Truncate", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "/", 
             RowBox[{"Apply", "[", 
              RowBox[{"Plus", ",", "#"}], "]"}]}], ")"}], "&"}], ",", 
          "vMat"}], "]"}], ",", "4"}], "]"}]}], ";", "\n", "\t", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Form", " ", "condition", " ", "indexes", " ", "and", " ", "output", 
        " ", "matrix", " ", "with", "\n", "\t", "condition", " ", "indexes", 
        " ", "in", " ", "first", " ", "row", " ", "and", " ", "the", " ", 
        "variance"}], "-", "\n", "\t", 
       RowBox[{
       "decomposition", " ", "proportions", " ", "in", " ", "the", " ", 
        "next", " ", "p", " ", "rows"}]}], " ", "*)"}], "\n", "\t\t \t\t", 
     "\n", " \t", 
     RowBox[{"PrependTo", "[", 
      RowBox[{"vMat", ",", 
       RowBox[{"condind", " ", "=", " ", 
        RowBox[{
         RowBox[{"Max", "[", "sv", "]"}], "/", "sv"}]}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"vMat", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"Reverse", "[", 
           RowBox[{"Sort", "[", 
            RowBox[{"Transpose", "[", "vMat", "]"}], "]"}], "]"}], "]"}], ",",
          "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"condind", " ", "=", " ", 
      RowBox[{"StringTruncate", "[", 
       RowBox[{"Reverse", "[", 
        RowBox[{"Sort", "[", "condind", "]"}], "]"}], "]"}]}], ";", "\n", 
     "\n", "\t", 
     RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\n", "\t", 
     RowBox[{
     "Print", "[", "\"\<Variance-decomposition proportions\>\"", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\n", "\t", 
     RowBox[{
     "Print", "[", "\"\<           Scaled condition indexes\>\"", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"Print", "[", 
      RowBox[{"PaddedForm", "[", 
       RowBox[{
        RowBox[{"TableForm", "[", 
         RowBox[{"vMat", ",", 
          RowBox[{"TableSpacing", "->", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ",", "\n", "\t\t", 
          RowBox[{"TableHeadings", "->", 
           RowBox[{"{", 
            RowBox[{"condind", ",", "labels"}], "}"}]}], ",", "\n", "\t\t", 
          RowBox[{"TableDirections", "->", 
           RowBox[{"{", 
            RowBox[{"Row", ",", "Column"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"NumberPadding", "->", 
         RowBox[{"{", 
          RowBox[{"\"\< \>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.415181329083909*^9, 3.415181333737666*^9}},
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"doRegData", "[", 
   RowBox[{"yblock_", ",", "xblock_"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ydata", ",", "xdata", ",", "n", ",", "p", ",", "g", ",", "xCon", ",", 
      "yCon", ",", "missObs", ",", "retainedCases", ",", "\n", "\t", "temp", 
      ",", "ny", ",", "nx", ",", "ylabels", ",", "xlabels"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"checkInput", "[", "yblock", "]"}]}], ")"}]}], "]"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"Reg", "::", "vecy"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ydata", ",", "ny", ",", "g", ",", "yCon", ",", "ylabels"}], 
         "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"checkInput", "[", "xblock", "]"}]}], ")"}]}], "]"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"Reg", "::", "vecx"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xdata", ",", "nx", ",", "p", ",", "xCon", ",", "xlabels"}], 
         "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"yCon", " ", "&&", " ", "xCon"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"Reg", "::", "con2"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"nx", ",", "ny"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"yCon", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"ydata", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"1.0", ",", " ", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"ylabels", ",", "\"\<Const\>\""}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"xCon", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"1.0", ",", " ", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"xlabels", ",", "\"\<Const\>\""}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"ylabels", " ", "=", " ", 
      RowBox[{"labelMaker", "[", 
       RowBox[{"ylabels", ",", "\"\<y\>\""}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"xlabels", " ", "=", " ", 
      RowBox[{"labelMaker", "[", 
       RowBox[{"xlabels", ",", "\"\<X\>\""}], "]"}]}], ";", "\n", "\n", "\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"missingObservations", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"ydata", ",", "xdata"}], "]"}], ",", "n", ",", "p"}], 
            "]"}]}], ")"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"Reg", "::", "doff"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"ydata", " ", "=", " ", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "g"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"xdata", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "g"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"retainedCases", ",", "missObs", ",", "n"}], "}"}], " ", 
         "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{"temp", ",", "1"}], "]"}]}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "ydata", ",", "xdata", ",", "n", ",", "p", ",", "g", ",", "missObs", 
        ",", "retainedCases", ",", "ylabels", ",", "xlabels"}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkInput", "[", "dataBlock_", "]"}], " ", ":=", "\n", "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
    "Recursive", " ", "routine", " ", "to", " ", "build", " ", "a", " ", 
     "data", " ", "matrix", " ", "from", " ", "an", " ", "input", " ", "of", 
     " ", "\n", "any", " ", "combination", " ", "of", " ", "lists"}], ",", 
    " ", 
    RowBox[{"matrices", " ", "or", " ", "irregular", " ", 
     RowBox[{"arrays", ".", "  ", "On"}], " ", "\n", "normal", " ", 
     "return"}], ",", " ", 
    RowBox[{
    "\"\<data\>\"", " ", "is", " ", "possibly", " ", "an", " ", "irregular", 
     " ", "array"}], ",", " ", 
    RowBox[{
    "nobs", " ", "is", " ", "\n", "the", " ", "length", " ", "of", " ", "the",
      " ", "shortest", " ", "row", " ", "in", " ", "data"}], ",", " ", 
    RowBox[{
    "varCount", " ", "is", " ", "the", " ", "number", " ", "\n", "of", " ", 
     "rows"}], ",", " ", 
    RowBox[{
    "and", " ", "Con", " ", "is", " ", "set", " ", "True", " ", "if", " ", 
     "a", " ", "\"\<const\>\"", " ", "is", " ", "encountered", " ", "and", 
     " ", "\n", "otherwise", " ", 
     RowBox[{"False", ".", "   ", "checkInput"}], " ", "returns", " ", 
     "False", " ", "if", " ", "dataBlock", " ", "has", "\n", "Depth", " ", 
     "1", " ", "or", " ", "if", " ", "two", " ", "\"\<constants\>\"", " ", 
     "are", " ", 
     RowBox[{"encountered", "."}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"varCount", "=", "0"}], ",", 
      RowBox[{"data", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Con", "=", "False"}], ",", 
      RowBox[{"nobs", "=", "Infinity"}], ",", "temp", ",", "i", ",", "\n", 
      "\t\t\t", 
      RowBox[{"labels", "=", 
       RowBox[{"{", "}"}]}], ",", "tempLabels", ",", "tempNobs"}], "}"}], ",",
     "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<const\>\"", ",", "\"\<Const\>\"", ",", "\"\<constant\>\"", 
           ",", "\"\<Constant\>\""}], "}"}], ",", "dataBlock"}], "]"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"varCount", "++"}], ";", "\n", "\t\t", 
        RowBox[{"Con", " ", "=", " ", "True"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
          "data", ",", "nobs", ",", "varCount", ",", "Con", ",", "labels"}], 
          "}"}], "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{
         RowBox[{"Depth", "[", "dataBlock", "]"}], " ", "==", " ", "1"}], 
        "]"}], ",", "\n", "\t\t", 
       RowBox[{"Return", "[", "False", "]"}]}], "  ", "\n", "\t", "]"}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"VectorQ", "[", "dataBlock", "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"labels", ",", "data", ",", "nobs"}], "}"}], " ", "=", " ", 
         
         RowBox[{"labelStrip", "[", "dataBlock", "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"varCount", "++"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "data", "}"}], ",", "nobs", ",", "varCount", ",", 
           "Con", ",", 
           RowBox[{"{", "labels", "}"}]}], "}"}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatrixQ", "[", "dataBlock", "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nobs", ",", "varCount"}], "}"}], " ", "=", " ", 
         RowBox[{"Dimensions", "[", "dataBlock", "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nobs", " ", "<", " ", "varCount"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nobs", ",", "varCount"}], "}"}], " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"varCount", ",", "nobs"}], "}"}]}], ";", "\n", "\t\t\t", 
           
           RowBox[{"data", " ", "=", " ", "dataBlock"}]}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"Transpose", "[", "dataBlock", "]"}]}]}], "\n", "\t\t", 
         "]"}], ";", "\n", "\t\t", 
        RowBox[{"Do", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tempLabels", ",", 
              RowBox[{"data", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "tempNobs"}], "}"}], "=", 
            
            RowBox[{"labelStrip", "[", " ", 
             RowBox[{"data", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", "\n", 
           "\t\t\t", 
           RowBox[{"nobs", " ", "=", " ", 
            RowBox[{"Min", "[", 
             RowBox[{"nobs", ",", "tempNobs"}], "]"}]}], ";", "\n", "\t\t\t", 
           
           RowBox[{"AppendTo", "[", 
            RowBox[{"labels", ",", "tempLabels"}], "]"}]}], ",", "\n", "\t\t",
           
          RowBox[{"{", 
           RowBox[{"i", ",", "varCount"}], "}"}]}], "]"}], ";", "\n", "\t\t", 
        
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
          "data", ",", "nobs", ",", "varCount", ",", "Con", ",", "labels"}], 
          "}"}], "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{"temp", " ", "=", " ", 
             RowBox[{"checkInput", "[", 
              RowBox[{"dataBlock", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}], "]"}], ",", 
         "\n", "\t\t\t", 
         RowBox[{"Return", "[", "False", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Con", "&&", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"Reg", "::", "con2"}], "]"}], ";", "\n", "\t\t\t\t", 
             RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t\t\t", 
            RowBox[{"Con", " ", "=", " ", 
             RowBox[{"Con", "||", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}]}]}], "\n", "\t\t\t", "]"}], 
          ";", "\n", "\t\t\t", 
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"data", ",", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t\t\t", 
          
          RowBox[{"nobs", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"nobs", ",", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t\t\t", 
          
          RowBox[{"varCount", " ", "+=", " ", 
           RowBox[{"temp", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "\t\t\t", 
          RowBox[{"labels", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"labels", ",", 
             RowBox[{"temp", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}]}]}], "\n", "\t\t", 
        "]"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dataBlock", "]"}]}], "}"}]}], "]"}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "data", ",", "nobs", ",", "varCount", ",", "Con", ",", "labels"}], 
       "}"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelStrip", "[", "dataVector_", "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"firstPiece", ",", "underscore", ",", "nobs"}], "}"}], ",", "\n",
     "\t", 
    RowBox[{
     RowBox[{"firstPiece", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"dataVector", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"underscore", " ", "=", " ", 
      RowBox[{"StringPosition", "[", 
       RowBox[{"firstPiece", ",", "\"\<_\>\"", ",", "1"}], "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"nobs", "=", 
      RowBox[{"Length", "[", "dataVector", "]"}]}], ";", "\n", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"underscore", "==", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"firstPiece", ",", "1"}], "]"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"dataVector", ",", "1"}], "]"}], ",", 
          RowBox[{"nobs", "-", "1"}]}], "}"}], "]"}]}], "\n", "\t", "]"}], 
     ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "underscore", "]"}], ">", "0"}], ",", "\n", 
       "\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"firstPiece", ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"dataVector", ",", "1"}], "]"}], ",", 
          RowBox[{"nobs", "-", "1"}]}], "}"}], "]"}]}], "\n", "\t", "]"}], 
     ";", "\n", "\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<**\>\"", ",", "dataVector", ",", "nobs"}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"labelMaker", "[", 
   RowBox[{"labels_", ",", "character_"}], "]"}], " ", ":=", "\n", "\t ", 
  RowBox[{"Table", "[", "\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"labels", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "==", "\"\<**\>\""}], ",", "\n", 
      "\t\t\t\t", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"character", ",", "\"\<[\>\"", ",", 
        RowBox[{"ToString", "[", "i", "]"}], ",", "\"\<]\>\""}], "]"}], ",", 
      "\n", "\t\t\t\t", 
      RowBox[{"labels", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
    "\t\t\t", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "labels", "]"}]}], "}"}]}], "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"missingObservations", "[", 
   RowBox[{"data_", ",", "n_", ",", "p_"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tempData", ",", "numMissing", ",", "nobs", ",", "retainedCases"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tempData", " ", "=", " ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"#", ",", "n"}], "]"}], "&"}], ",", "data"}], "]"}], "//", 
       "N"}]}], ";", "\n", "\t", 
     RowBox[{"PrependTo", "[", 
      RowBox[{"tempData", ",", 
       RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"tempData", " ", "=", " ", 
      RowBox[{"Transpose", "[", "tempData", "]"}]}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"tempData", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"tempData", ",", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", "NumberQ"}], "]"}], "&"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"remove", " ", "non"}], "-", 
       RowBox[{
        RowBox[{"num", "'"}], "l", " ", "obs"}]}], " ", "*)"}], "\n", "\n", 
     "\t", 
     RowBox[{"nobs", " ", "=", " ", 
      RowBox[{"Length", "[", "tempData", "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nobs", " ", "<", " ", "p"}], ",", " ", 
       RowBox[{"Return", "[", "False", "]"}]}], " ", "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"negative", " ", "degrees", " ", "of", " ", "freedom"}], " ", 
      "*)"}], "\n", "\t", 
     RowBox[{"numMissing", " ", "=", " ", 
      RowBox[{"n", " ", "-", " ", "nobs"}]}], ";", "\n", "\t", 
     RowBox[{"tempData", " ", "=", " ", 
      RowBox[{"Transpose", "[", "tempData", "]"}]}], ";", "\n", "\t", 
     RowBox[{"retainedCases", " ", "=", " ", 
      RowBox[{"tempData", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"tempData", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"tempData", ",", "1"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"data", " ", "matrix", " ", "suitable", " ", "for", " ", 
       RowBox[{"regr", "."}]}], " ", "*)"}], "\n", "\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "tempData", ",", "retainedCases", ",", "numMissing", ",", "nobs"}], 
       "}"}], "]"}]}]}], "\n", "]"}], "\t"}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"restore", "[", 
   RowBox[{"series_", ",", "index_", ",", "n_", ",", "misObs_"}], "]"}], " ", 
  ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"Indeterminate", ",", 
        RowBox[{"{", 
         RowBox[{"n", "+", "misObs"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"temp", "[", 
           RowBox[{"[", " ", 
            RowBox[{"index", "[", 
             RowBox[{"[", "#", "]"}], "]"}], " ", "]"}], "]"}], " ", "=", " ",
           
          RowBox[{"series", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}], ",", "\n", "\t\t", 
       
       RowBox[{"Range", "[", " ", 
        RowBox[{"Length", "[", "index", "]"}], " ", "]"}]}], " ", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"Return", "[", "temp", "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"IV", "[", 
   RowBox[{
   "y_", ",", "includedVariates_", ",", "instrumentalVariables_", ",", 
    "opts___"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"TwoStage", "[", 
   RowBox[{"y", ",", "includedVariates", ",", 
    RowBox[{"{", "}"}], ",", "instrumentalVariables", ",", "opts", ",", "\n", 
    "\t\t", 
    RowBox[{"estimator", " ", "->", " ", "IV"}]}], "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoStage", "[", 
   RowBox[{
   "y_", ",", "includedy_", ",", "includedx_", ",", "excludedx_", ",", 
    "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "yhat", ",", "beta", ",", "xx", ",", "ydata", ",", "y1data", ",", 
      "x1data", ",", "x2data", ",", "n", ",", "g", ",", "g1", ",", "k1", ",", 
      "k2", ",", "\n", "\t", "Con", ",", "retainedCases", ",", "err", ",", 
      "missObs", ",", "sig2", ",", "se", ",", "rsqr", ",", "rbar2", ",", 
      "runcen", ",", "\n", "\t", "temp", ",", "psinv", ",", "r", ",", 
      "ylabels", ",", "y1labels", ",", "x1labels", ",", "x2labels"}], "}"}], 
    ",", "\n", "\t", "\n", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"Prepare", " ", "data"}], " ", "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", "=", 
           RowBox[{"do2SData", "[", 
            RowBox[{
            "y", ",", "includedy", ",", "includedx", ",", "excludedx", ",", 
             "opts"}], "]"}]}], ")"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"Return", "[", "False", "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "ydata", ",", "y1data", ",", "x1data", ",", "x2data", ",", "n", ",", 
          "g", ",", "g1", ",", "k1", ",", "k2", ",", "Con", ",", 
          "retainedCases", ",", "\n", "\t\t", "missObs", ",", "ylabels", ",", 
          "y1labels", ",", "x1labels", ",", "x2labels"}], "}"}], " ", "=", 
        " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"estimator", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "SimEqns", "]"}]}], ",", "\n", "\t\t", "IV", 
       ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"k2", ">", "g1"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"temp", " ", "=", " ", 
            RowBox[{"doBeta", "[", 
             RowBox[{"y1data", ",", "x2data", ",", "opts", ",", 
              RowBox[{"output", "->", "1"}]}], "]"}]}], ";", "\n", "\t\t\t\t",
            
           RowBox[{"x2data", " ", "=", " ", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ".", "x2data"}]}]}]}], "\n", 
         "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"beta", ",", "xx", ",", "err", ",", "yhat"}], "}"}], " ", 
         "=", " ", 
         RowBox[{"doIV", "[", 
          RowBox[{"ydata", ",", "y1data", ",", "x2data", ",", "opts"}], 
          "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"x1labels", " ", "=", " ", "y1labels"}], ";", "\n", "\t\t\t", 
        
        RowBox[{"ylabels", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"ylabels", ",", " ", "x2labels"}], "]"}]}]}], ",", "\n", 
       "\t\t\t", "\n", "\t\t", "_", ",", "  \t", 
       RowBox[{"(*", " ", 
        RowBox[{"Default", " ", "is", " ", "TwoStage"}], "  ", "*)"}], "\n", 
       "\t\t\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{"form", " ", "first", " ", "stage"}], " ", "*)"}], "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"doBeta", "[", 
          RowBox[{"y1data", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"x1data", ",", "x2data"}], "]"}], ",", "opts", ",", 
           RowBox[{"output", "->", "1"}]}], "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"yhat", " ", "=", " ", 
         RowBox[{
          RowBox[{"temp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ".", 
          RowBox[{"Join", "[", 
           RowBox[{"x1data", ",", "x2data"}], "]"}]}]}], ";", "\n", "\t\t\t", 
        "\n", "\t\t\t", 
        RowBox[{"ylabels", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{"ylabels", ",", "x2labels"}], "]"}]}], ";", "\n", 
        "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Adjust", " ", "constant", " ", "to", " ", "first", " ", "row", " ", 
          "if", " ", "present"}], " ", "*)"}], "\n", "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{"Con", ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"PrependTo", "[", 
            RowBox[{"yhat", ",", 
             RowBox[{"x1data", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\n", "\t\t\t\t", 
           
           RowBox[{"PrependTo", "[", 
            RowBox[{"y1data", ",", 
             RowBox[{"x1data", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\n", "\t\t\t\t", 
           
           RowBox[{"x1data", " ", "=", " ", 
            RowBox[{"Drop", "[", 
             RowBox[{"x1data", ",", "1"}], "]"}]}], ";", "\n", "\t\t\t\t", 
           RowBox[{"x1labels", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{"x1labels", ",", "1"}], "]"}], ",", "y1labels", ",", 
              RowBox[{"Drop", "[", 
               RowBox[{"x1labels", ",", "1"}], "]"}]}], "]"}]}]}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"x1labels", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"y1labels", ",", "x1labels"}], "]"}]}]}], "\n", "\t\t\t", 
         "]"}], ";", "\n", "\t\t\t", "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Form", " ", "2", "nd", " ", "stage", " ", "estimator", " ", "using",
           " ", "1", "st", " ", "stage", " ", "yhat"}], "  ", "*)"}], "\n", 
        "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"beta", ",", "psinv", ",", "r"}], "}"}], " ", "=", " ", 
         RowBox[{"doBeta", "[", 
          RowBox[{"ydata", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"yhat", ",", "x1data"}], "]"}], ",", "opts"}], "]"}]}], 
        ";", "\n", "\t\t\t", "\n", "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Form", " ", "2", "nd", " ", "stage", " ", "err", " ", "and", " ", 
          "yhat"}], " ", "*)"}], "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"err", ",", "yhat"}], "}"}], " ", "=", " ", 
         RowBox[{"doErr", "[", 
          RowBox[{"ydata", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"y1data", ",", "x1data"}], "]"}], ",", "beta"}], "]"}]}], 
        ";", "\n", "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "[", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"xx", " ", "=", " ", 
              RowBox[{"doVarCovMatrix", "[", 
               RowBox[{"r", ",", "psinv", ",", "err", ",", "g", ",", "opts"}],
                "]"}]}], ")"}]}], "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"Return", "[", "False", "]"}]}], "\n", "\t\t\t", "]"}]}]}], 
      "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"second", "-", 
       RowBox[{"stage", " ", "statistics"}]}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sig2", ",", "se", ",", "rsqr", ",", "rbar2", ",", "runcen"}], 
       "}"}], " ", "=", " ", "\n", "\t\t", 
      RowBox[{"doStats", "[", 
       RowBox[{"ydata", ",", "yhat", ",", "err", ",", "xx", ",", "n", ",", 
        RowBox[{"g1", "+", "k1"}], ",", "g", ",", "opts"}], "]"}]}], ";", 
     "\n", "\t\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"displayOutput", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"displayOut", "[", 
        RowBox[{"beta", ",", "se", ",", "err", ",", "sig2", ",", "n", ",", 
         RowBox[{"k1", "+", "g1"}], ",", "g", ",", "missObs", ",", 
         "retainedCases", ",", "\n", "\t\t\t\t\t\t\t", "rsqr", ",", "rbar2", 
         ",", "runcen", ",", "ylabels", ",", "x1labels", ",", "opts"}], 
        "]"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varDCom", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"doVarDComIV", "[", 
        RowBox[{"xx", ",", 
         RowBox[{"reduceRank", "[", "se", "]"}], ",", 
         RowBox[{"reduceRank", "[", "sig2", "]"}], ",", 
         RowBox[{"g1", "+", "k1"}], ",", "x1labels"}], "]"}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"missObs", "!=", "0"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"err", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"restore", "[", 
             RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
             "]"}], "&"}], ",", "err"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"yhat", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"restore", "[", 
             RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
             "]"}], "&"}], ",", "yhat"}], "]"}]}]}]}], " ", "\n", "\t", "]"}],
      ";", "\n", "\t", "\n", "\t", 
     RowBox[{"doReturn", "[", "opts", "]"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"must", " ", "not", " ", "have", " ", "semicolon"}], " ", "*)"}], 
   "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"doVarDComIV", "[", 
   RowBox[{"xx_", ",", "se_", ",", "sig2_", ",", "p_", ",", "labels_"}], 
   "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v", ",", "sv", ",", "S", ",", "vMat"}], "}"}], ",", "\n", "\t", 
    
    RowBox[{
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"1.0", "/", "se"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"vMat", " ", "=", " ", 
      RowBox[{"S", ".", 
       RowBox[{"(", 
        RowBox[{"sig2", "*", "xx"}], ")"}], ".", "S"}]}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "sv", ",", "vMat"}], "}"}], " ", "=", " ", 
      RowBox[{"singularValues", "[", 
       RowBox[{"vMat", ",", 
        RowBox[{"tolerance", " ", "->", " ", 
         RowBox[{"10.", "^", 
          RowBox[{"-", "30"}]}]}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"doVarDCom", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"Sqrt", "[", "sv", "]"}]}], "}"}], ",", "p", ",", "labels"}],
       "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.415181345692458*^9, 3.415181349234272*^9}},
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"do2SData", "[", 
   RowBox[{"y_", ",", "y1_", ",", "x1_", ",", "x2_", ",", "opts___"}], "]"}], 
  " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ydata", ",", "y1data", ",", "x1data", ",", "x2data", ",", "n", ",", "g",
       ",", "g1", ",", "k1", ",", "k2", ",", "Con", ",", "yCon", ",", "y1Con",
       ",", "\n", "\t", "x1Con", ",", "x2Con", ",", "temp", ",", "ny1", ",", 
      "nx1", ",", "nx2", ",", "retainedCases", ",", "missObs", ",", "ylabels",
       ",", "\n", "\t", "y1labels", ",", "x1labels", ",", "x2labels"}], "}"}],
     ",", "\n", "\t", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"checkInput", "[", "y", "]"}]}], ")"}]}], "]"}], ",", "\n",
        "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TwoStage", "::", "ydat"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ydata", ",", "n", ",", "g", ",", "yCon", ",", "ylabels"}], 
         "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"g", "!=", "1"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TwoStage", "::", "ydat"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"checkInput", "[", "y1", "]"}]}], ")"}]}], "]"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TwoStage", "::", "y1dat"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "y1data", ",", "ny1", ",", "g1", ",", "y1Con", ",", "y1labels"}], 
         "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"checkInput", "[", "x2", "]"}]}], ")"}]}], "]"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TwoStage", "::", "x2dat"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x2data", ",", "nx2", ",", "k2", ",", "x2Con", ",", "x2labels"}], 
         "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"k2", "<", "g1"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TwoStage", "::", "unid"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"estimator", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "SimEqns", "]"}]}], ",", "\n", "\t\t", "IV", 
       ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"x1data", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"nx1", " ", "=", " ", "Infinity"}], ";", "\n", "\t\t\t", 
        RowBox[{"k1", " ", "=", " ", "0"}], ";", "\n", "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"yCon", "&&", "y1Con"}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{"yCon", "&&", "x2Con"}], ")"}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"TwoStage", "::", "con2"}], "]"}], ";", "\n", "\t\t\t\t", 
           
           RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t\t\t", "]"}], 
        ";", "\n", "\t\t\t", 
        RowBox[{"x1Con", " ", "=", " ", "False"}], ";", "\n", "\t\t\t", 
        RowBox[{"Con", " ", "=", " ", "y1Con"}]}], ",", "\n", "\t\t", "_", 
       ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "[", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"temp", " ", "=", " ", 
              RowBox[{"checkInput", "[", "x1", "]"}]}], ")"}]}], "]"}], ",", 
          "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"TwoStage", "::", "x1dat"}], "]"}], ";", "\n", "\t\t\t\t",
            
           RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "x1data", ",", "nx1", ",", "k1", ",", "x1Con", ",", "x1labels"}], 
            "}"}], " ", "=", " ", "temp"}]}], "\n", "\t\t\t", "]"}], ";", 
        "\n", "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"yCon", ",", "y1Con", ",", "x1Con", ",", "x2Con"}], 
              "}"}], ",", "True"}], "]"}], " ", ">", " ", "1"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"TwoStage", "::", "con2"}], "]"}], ";", "\n", "\t\t\t\t", 
           
           RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t\t\t", "]"}], 
        ";", "\n", "\t\t\t", 
        RowBox[{"Con", " ", "=", " ", "x1Con"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\n", "\t", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "ny1", ",", "nx1", ",", "nx2"}], "]"}]}], ";", "\n", 
     "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"yCon", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"ydata", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"1.0", ",", " ", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"ylabels", ",", "\"\<Const\>\""}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"y1Con", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"y1data", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"1.0", ",", " ", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"y1labels", ",", "\"\<Const\>\""}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"x1Con", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"x1data", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"1.0", ",", " ", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"x1labels", ",", "\"\<Const\>\""}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{"x2Con", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{"x2data", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"1.0", ",", " ", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"x2labels", ",", "\"\<Const\>\""}], "]"}]}]}], "\n", "\t", 
      "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"missingObservations", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
              "ydata", ",", "\n", "\t\t\t\t\t\t\t\t", "y1data", ",", "x1data",
                ",", "x2data"}], "]"}], ",", "n", ",", 
             RowBox[{"k1", "+", "k2"}]}], "]"}]}], ")"}]}], "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TwoStage", "::", "doff"}], "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"temp", ",", "retainedCases", ",", "missObs", ",", "n"}], 
         "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], ";", "\n", "\t",
      "\n", "\t", 
     RowBox[{"ydata", "  ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{"temp", ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"y1data", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{"temp", ",", " ", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"g1", "+", "1"}]}], "}"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"x1data", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{"temp", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g1", "+", "2"}], ",", 
          RowBox[{"g1", "+", "1", "+", "k1"}]}], "}"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"x2data", " ", "=", " ", 
      RowBox[{"Take", "[", 
       RowBox[{"temp", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "k2"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", "\t\t", "\n", 
     "\t", 
     RowBox[{"ylabels", "  ", "=", " ", 
      RowBox[{"labelMaker", "[", 
       RowBox[{"ylabels", ",", "\"\<y\>\""}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"y1labels", " ", "=", " ", 
      RowBox[{"labelMaker", "[", 
       RowBox[{"y1labels", ",", "\"\<Y\>\""}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"x1labels", " ", "=", " ", 
      RowBox[{"labelMaker", "[", 
       RowBox[{"x1labels", ",", "\"\<X\>\""}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"x2labels", " ", "=", " ", 
      RowBox[{"labelMaker", "[", 
       RowBox[{"x2labels", ",", "\"\<Z\>\""}], "]"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "ydata", ",", "y1data", ",", "x1data", ",", "x2data", ",", "n", ",", 
        "g", ",", "g1", ",", "k1", ",", "k2", ",", "Con", ",", "\n", "\t\t", 
        "retainedCases", ",", "missObs", ",", "ylabels", ",", "y1labels", ",",
         "x1labels", ",", "x2labels"}], "}"}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"doIV", "[", 
   RowBox[{"y_", ",", "z_", ",", "w_", ",", "opts___"}], "]"}], " ", ":=", 
  "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "delta", ",", "zwInv", ",", "psinvZW", ",", "xx", ",", "err", ",", 
      "yhat"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"zwInv", " ", "=", " ", 
      RowBox[{"Inverse", "[", 
       RowBox[{"z", ".", 
        RowBox[{"Transpose", "[", "w", "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"psinvZW", " ", "=", " ", 
      RowBox[{
       RowBox[{"Transpose", "[", "zwInv", "]"}], ".", "w"}]}], ";", "\n", 
     "\t", 
     RowBox[{"delta", " ", "=", " ", 
      RowBox[{"y", ".", 
       RowBox[{"Transpose", "[", "psinvZW", "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"yhat", " ", "=", " ", 
      RowBox[{"delta", ".", "z"}]}], ";", "\n", "\t", 
     RowBox[{"err", " ", "=", " ", 
      RowBox[{"y", "-", "yhat"}]}], ";", "\n", "\t", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"varCovMatrix", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", "White", 
       ",", "\n", "\t\t\t", 
       RowBox[{"xx", " ", "=", " ", 
        RowBox[{"psinvZW", ".", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{
           RowBox[{"reduceRank", "[", "err", "]"}], "^", "2"}], "]"}], "\n", 
         "\t\t\t\t", ".", 
         RowBox[{"Transpose", "[", "psinvZW", "]"}]}]}], ",", "\n", "\t\t", 
       "_", ",", "\n", "\t\t\t", 
       RowBox[{"xx", " ", "=", " ", 
        RowBox[{"psinvZW", ".", 
         RowBox[{"Transpose", "[", "psinvZW", "]"}]}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\t\t\t\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"delta", ",", "xx", ",", "err", ",", "yhat"}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TwoStage", "::", "ydat"}], " ", ":=", " ", 
  "\"\<y variate incorrect.\>\""}], "\n", 
 RowBox[{
  RowBox[{"TwoStage", "::", "y1dat"}], " ", ":=", " ", 
  "\"\<Included variables or included\nendogenous variates incorrect.\>\""}], \
"\n", 
 RowBox[{
  RowBox[{"TwoStage", "::", "x1dat"}], " ", ":=", " ", 
  "\"\<Included exogenous variates incorrect.\>\""}], "\n", 
 RowBox[{
  RowBox[{"TwoStage", "::", "x2dat"}], " ", ":=", " ", 
  "\"\<Instrumental variables or excluded\nexogenous variates \
incorrect.\>\""}], "\n", 
 RowBox[{
  RowBox[{"TwoStage", "::", "unid"}], " ", ":=", " ", 
  "\"\<Inadequate instruments -- underidentified.\>\""}], "\n", 
 RowBox[{
  RowBox[{"TwoStage", "::", "con2"}], " ", ":=", " ", 
  "\"\<Constant used twice.\>\""}], "\n", 
 RowBox[{
  RowBox[{"TwoStage", "::", "doff"}], " ", ":=", " ", 
  "\"\<Inadequate degrees of freedom.\>\""}], "\n", 
 RowBox[{
  RowBox[{"MixedEstimation", "::", "ydat"}], " ", ":=", " ", 
  "\"\<Dependent variate must be a vector.\>\""}], "\n", 
 RowBox[{
  RowBox[{"MixedEstimation", "::", "cdat"}], " ", ":=", " ", 
  "\"\<c must be a vector of length r.\>\""}], "\n", 
 RowBox[{
  RowBox[{"MixedEstimation", "::", "Rdat"}], " ", ":=", " ", 
  "\"\<R must be a matrix of size r x p.\>\""}], "\n", 
 RowBox[{
  RowBox[{"MixedEstimation", "::", "sigR"}], " ", ":=", " ", 
  "\"\<SigR must be a symmetric matrix of size r.\>\""}], "\n", 
 RowBox[{
  RowBox[{"MixedEstimation", "::", "sigX"}], " ", ":=", " ", 
  "\"\<SigX must be a symmetric matrix of size n.\>\""}]}], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MixedEstimation", "[", 
    RowBox[{"y_", ",", "X_", ",", "c_", ",", "R_", ",", "SigR_", ",", 
     RowBox[{"SigX_:", "Null"}], ",", "opts___"}], "]"}], " ", ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "beta", ",", "sig2", ",", "xx", ",", "se", ",", "n", ",", "g", ",", "p",
        ",", "missObs", ",", "err", ",", "yhat", ",", "rsqr", ",", "rbar2", 
       ",", "runcen", ",", "\n", "\t", "ydata", ",", "xdata", ",", 
       "retainedCases", ",", "temp", ",", "s", ",", "ylabels", ",", "xlabels",
        ",", "r", ",", "psinvX"}], "}"}], ",", "\n", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"temp", "=", 
            RowBox[{"doRegData", "[", 
             RowBox[{"y", ",", "X"}], "]"}]}], ")"}]}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"Return", "[", "False", "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ydata", ",", "xdata", ",", "n", ",", "p", ",", "g", ",", "missObs",
            ",", "retainedCases", ",", "\n", "\t\t\t", "ylabels", ",", 
           "xlabels"}], "}"}], " ", "=", " ", "temp"}]}], "\n", "\t", "]"}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"temp", "=", 
            RowBox[{"doMixedEstData", "[", 
             RowBox[{
             "ydata", ",", "xdata", ",", "n", ",", "p", ",", "g", ",", "c", 
              ",", "R", ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t", "SigR", ",", 
              "SigX", ",", "opts"}], "]"}]}], ")"}]}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"Return", "[", "False", "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ydata", ",", "xdata", ",", "s"}], "}"}], "=", "temp"}]}], 
       " ", 
       RowBox[{"(*", 
        RowBox[{"s", " ", "is", " ", "the", " ", 
         RowBox[{"no", ".", "of"}], " ", "prior", " ", "constraints"}], 
        "*)"}], "\n", "\t", "]"}], ";", "\t", "\n", "\n", "\t", 
      RowBox[{"temp", " ", "=", " ", 
       RowBox[{"n", "+", "missObs"}]}], ";", "\n", "\t", 
      RowBox[{"retainedCases", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"retainedCases", ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"temp", "+", "1"}], ",", 
           RowBox[{"temp", "+", "s"}]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"n", "+", "s"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"ready", " ", "to", " ", "do", " ", "Mixed", " ", 
        RowBox[{"Estimation", "."}]}], "*)"}], "\n", "\t", "\n", " \t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"beta", ",", "psinvX", ",", "r"}], "}"}], " ", "=", " ", 
       RowBox[{"doBeta", "[", 
        RowBox[{"ydata", ",", "xdata", ",", "opts"}], "]"}]}], ";", "\n", 
      " \t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"err", ",", "yhat"}], "}"}], " ", "=", " ", 
       RowBox[{"doErr", "[", 
        RowBox[{"ydata", ",", "xdata", ",", "beta"}], "]"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"xx", " ", "=", " ", 
            RowBox[{"doVarCovMatrix", "[", 
             RowBox[{"r", ",", "psinvX", ",", "err", ",", "g", ",", "opts"}], 
             "]"}]}], ")"}]}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], "\n", "\t", "]"}], ";", "\n",
       "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sig2", ",", "se", ",", "rsqr", ",", "rbar2", ",", "runcen"}],
         "}"}], " ", "=", " ", "\n", "\t\t", 
       RowBox[{"doStats", "[", 
        RowBox[{
        "ydata", ",", "yhat", ",", "err", ",", "xx", ",", "n", ",", "p", ",", 
         "g", ",", "opts"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"se", " ", "=", " ", 
       RowBox[{"se", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"reduceRank", "[", "sig2", "]"}], "]"}]}]}], ";", "\n", "\t",
       
      RowBox[{"sig2", " ", "=", " ", 
       RowBox[{"{", "1.0", "}"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"displayOutput", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"displayOut", "[", 
         RowBox[{
         "beta", ",", "se", ",", "err", ",", "sig2", ",", "n", ",", "p", ",", 
          "g", ",", "missObs", ",", "retainedCases", ",", "\n", 
          "\t\t\t\t\t\t\t", "rsqr", ",", "rbar2", ",", "runcen", ",", 
          "ylabels", ",", "xlabels", ",", "opts"}], "]"}]}], "\n", "\t", 
       "]"}], ";", "  ", "\n", "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"varDCom", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "Reg", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"doVarDCom", "[", 
         RowBox[{"r", ",", "p", ",", "xlabels"}], "]"}]}], "\n", "\t", "]"}], 
      ";", "\n", "\n", " \t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"missObs", "!=", "0"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"err", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"restore", "[", 
              RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
              "]"}], "&"}], ",", "err"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"yhat", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"restore", "[", 
              RowBox[{"#", ",", "retainedCases", ",", "n", ",", "missObs"}], 
              "]"}], "&"}], ",", "yhat"}], "]"}]}]}]}], " ", "\n", "\t", 
       "]"}], ";", "\n", "\t\t\t\t\t\t\t\t", "\n", "\t", 
      RowBox[{"doReturn", "[", "opts", "]"}]}]}], "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"must", " ", "not", " ", "have", " ", "semicolon"}], " ", "*)"}],
     "\n", "]"}]}], "\n"}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"doMixedEstData", "[", 
   RowBox[{
   "y_", ",", "X_", ",", "n_", ",", "p_", ",", "g_", ",", "c_", ",", "R_", 
    ",", "SigR_", ",", "SigX_", ",", "opts___"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ydata", ",", "xdata", ",", "InvRootSigR", ",", "InvRootSigX", ",", 
      RowBox[{"RR", " ", "=", " ", "R"}], ",", "s", ",", "sp", ",", "a", ",", 
      "b", ",", "v", ",", "sv", ",", "u"}], "}"}], ",", "\n", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"g", "!=", "1"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MixedEstimation", "::", "ydat"}], "]"}], ";", "\n", "\t\t", 
        
        RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MatrixQ", "[", "RR", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MixedEstimation", "::", "Rdat"}], "]"}], ";", "\n", "\t\t", 
        
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", "sp"}], "}"}], " ", "=", " ", 
         RowBox[{"Dimensions", "[", "RR", "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sp", "!=", "p"}], " ", "&&", " ", 
           RowBox[{"s", "!=", "p"}]}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"MixedEstimation", "::", "Rdat"}], "]"}], ";", "\n", 
           "\t\t\t", 
           RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t\t", "]"}], 
        ";", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sp", "!=", "p"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"RR", " ", "=", " ", 
            RowBox[{"Transpose", "[", "RR", "]"}]}], ";", "\n", "\t\t\t", 
           RowBox[{"s", " ", "=", " ", "sp"}]}]}], "\n", "\t\t", "]"}]}]}], 
      "\n", "\t", "]"}], ";", "  ", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Note", ":", " ", 
         RowBox[{
         "A", " ", "problem", " ", "arises", " ", "as", " ", "to", " ", "the",
           " ", "orientation", " ", "R", " ", 
          RowBox[{"(", "RR", ")"}], " ", "should", "\n", "\t", "have", " ", 
          "if", " ", "s"}]}], " ", "=", " ", 
        RowBox[{"sp", " ", "=", " ", 
         RowBox[{
          RowBox[{"p", ".", "  ", "It"}], " ", "is", " ", "assumed", " ", 
          "in", " ", "this", " ", "case", " ", "that", " ", "s", " ", "is", 
          " ", "the", "\n", "\t", "number", " ", "of", " ", 
          "constraints"}]}]}], ",", " ", 
       RowBox[{"and", " ", "sp", " ", "the", " ", "number", " ", "of", " ", 
        RowBox[{"variates", "."}]}]}], " ", "*)"}], "\n", "\t\t", "\n", "\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"VectorQ", "[", "c", "]"}]}], " ", "||", " ", 
        RowBox[{"s", "!=", 
         RowBox[{"Length", "[", "c", "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MixedEstimation", "::", "cdat"}], "]"}], ";", "\n", "\t\t", 
        
        RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SymmetricQ", "[", "SigR", "]"}]}], " ", "||", " ", 
        RowBox[{"!", 
         RowBox[{"TrueQ", "[", 
          RowBox[{
           RowBox[{"Length", "[", "SigR", "]"}], " ", "==", " ", "s"}], 
          "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"MixedEstimation", "::", "sigR"}], "]"}], ";", "\n", "\t\t", 
        
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v", ",", "sv", ",", "u"}], "}"}], " ", "=", " ", 
         RowBox[{"singularValues", "[", 
          RowBox[{
           RowBox[{"SigR", "//", "N"}], ",", 
           RowBox[{"tolerance", " ", "->", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"-", "30"}]}]}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"InvRootSigR", " ", "=", " ", 
         RowBox[{"-", 
          RowBox[{
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"1.0", "/", 
             RowBox[{"Sqrt", "[", "sv", "]"}]}], "]"}], ".", "u"}]}]}]}]}], 
      "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"SigX", "==", "Null"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"a", " ", "=", " ", 
         RowBox[{"doBeta", "[", 
          RowBox[{"y", ",", "X", ",", "opts", ",", 
           RowBox[{"output", "->", "1"}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"b", " ", "=", " ", 
         RowBox[{"doErr", "[", 
          RowBox[{"y", ",", "X", ",", 
           RowBox[{"a", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "\"\<beta\>\""}], 
         " ", "*)"}], "\n", "\t\t", 
        RowBox[{"b", " ", "=", " ", 
         RowBox[{"reduceRank", "[", 
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "\"\<err\>\""}], 
         " ", "*)"}], "\n", "\t\t", 
        RowBox[{"b", " ", "=", " ", 
         RowBox[{"1.0", "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"b", ".", "b"}], "/", 
            RowBox[{"(", 
             RowBox[{"n", "-", "p"}], ")"}]}], "]"}]}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{"this", " ", "is", " ", 
          RowBox[{"1", "/", "sig2"}]}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{"ydata", " ", "=", " ", 
         RowBox[{"b", " ", 
          RowBox[{"reduceRank", "[", "y", "]"}]}]}], ";", "\n", "\t\t", 
        RowBox[{"xdata", " ", "=", " ", 
         RowBox[{"b", " ", "X"}]}]}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"SymmetricQ", "[", "SigX", "]"}]}], " ", "||", " ", 
          RowBox[{"!", 
           RowBox[{"TrueQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", "SigX", "]"}], " ", "==", " ", "n"}], 
            "]"}]}]}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"MixedEstimation", "::", "sigX"}], "]"}], ";", "\n", 
          "\t\t\t", 
          RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"v", ",", "sv", ",", "u"}], "}"}], " ", "=", " ", 
           RowBox[{"singularValues", "[", 
            RowBox[{
             RowBox[{"SigX", "//", "N"}], ",", 
             RowBox[{"tolerance", " ", "->", " ", 
              RowBox[{"10.", "^", 
               RowBox[{"-", "30"}]}]}]}], "]"}]}], ";", "\n", "\t\t\t", 
          RowBox[{"InvRootSigX", "=", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Transpose", "[", "u", "]"}], ".", 
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"1.0", "/", 
               RowBox[{"Sqrt", "[", "sv", "]"}]}], "]"}]}]}]}], ";", "\n", 
          "\t\t\t", 
          RowBox[{"ydata", " ", "=", " ", 
           RowBox[{
            RowBox[{"reduceRank", "[", "y", "]"}], ".", "InvRootSigX"}]}], 
          ";", "\n", "\t\t\t", 
          RowBox[{"xdata", " ", "=", " ", 
           RowBox[{"X", ".", "InvRootSigX"}]}]}]}], "\n", "\t\t", "]"}]}], 
      "\n", "\t", "]"}], ";", " ", "\n", "\n", "\t", "\n", "\t", 
     RowBox[{"ydata", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"ydata", ",", 
        RowBox[{"InvRootSigR", ".", "c"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"xdata", " ", "=", " ", 
      RowBox[{"Adjoin", "[", 
       RowBox[{"xdata", ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"InvRootSigR", ".", "RR"}], "]"}]}], "]"}]}], ";", "\n", 
     "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "ydata", "}"}], ",", "xdata", ",", "s"}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.415181358938506*^9, 3.4151813754031343`*^9}},
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Utility", " ", "Programs", " ", "for", " ", "Reg"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mean", "[", "list_List", "]"}], " ", ":=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Apply", "[", 
       RowBox[{"Plus", ",", "list"}], "]"}], "/", 
      RowBox[{"Length", "[", "list", "]"}]}], "]"}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"mean", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", "list", "]"}]}], "}"}], ",", "\n", 
      "\t\t\t\t\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1.", ",", 
           RowBox[{"{", "n", "}"}]}], "]"}], ".", "list"}], ")"}], "/", 
       "n"}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"correlation", "[", 
     RowBox[{"x1_List", ",", "x2_List"}], "]"}], " ", ":=", "\n", "\t", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}], "}"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{"Z", "-", 
          RowBox[{"mean", "[", 
           RowBox[{"Transpose", "[", "Z", "]"}], "]"}]}]}], ";", "\n", "\t\t",
         
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{"Z", ".", 
          RowBox[{"Transpose", "[", "Z", "]"}]}]}], ";", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Z", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", " ", "0."}], " ", "||",
            " ", 
           RowBox[{
            RowBox[{"Z", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "==", " ", "0."}]}],
           ",", "Indeterminate", ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Z", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"Z", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
             RowBox[{"Z", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], "\n", 
         "\t\t", "]"}]}]}], "\n", "\t", "]"}], "/;", " ", 
     RowBox[{
      RowBox[{"Length", "[", "x1", "]"}], " ", "==", " ", 
      RowBox[{"Length", "[", "x2", "]"}]}]}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"EuclideanNorm", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"N", "[", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"list", ".", "list"}], "]"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"Truncate", "[", 
     RowBox[{"x_", ",", "n_"}], "]"}], " ", ":=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"x", " ", 
        RowBox[{"10.", "^", "n"}]}], "]"}], " ", 
      RowBox[{"10.", "^", 
       RowBox[{"-", "n"}]}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"StringTruncate", "[", "x_", "]"}], " ", ":=", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"digits", ",", " ", "num"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"digits", ",", " ", "num"}], "}"}], " ", "=", " ", 
        RowBox[{"RealDigits", "[", 
         RowBox[{
          RowBox[{"x", "+", ".05"}], "//", "N"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"digits", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", " ", "digits"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"num", "<=", "5"}], ",", "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "digits", "]"}], ">", "num"}], ",", "\n", 
           "\t\t\t", 
           RowBox[{
            RowBox[{"digits", " ", "=", " ", 
             RowBox[{"Insert", "[", 
              RowBox[{"digits", ",", "\"\<.\>\"", ",", 
               RowBox[{"num", "+", "1"}]}], "]"}]}], ";", "\n", "\t\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"Take", "[", 
               RowBox[{"digits", ",", 
                RowBox[{"num", "+", "2"}]}], "]"}], "]"}], "]"}]}], ",", "\n",
            "\t\t\t", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"digits", ",", "\"\<.0\>\""}], "]"}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"StringJoin", "[", "digits", "]"}], "]"}]}]}], "\n", 
          "\t\t", "]"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"digits", " ", "=", " ", 
           RowBox[{"Insert", "[", 
            RowBox[{"digits", ",", "\"\<.\>\"", ",", "2"}], "]"}]}], ";", 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"digits", "[", 
            RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", "\"\<e\>\""}], ";",
           "\n", "\t\t", 
          RowBox[{
           RowBox[{"digits", "[", 
            RowBox[{"[", "7", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"num", "-", "1"}], "]"}]}], ";", "\n", "\t\t", 
          RowBox[{"Return", "[", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"Take", "[", 
             RowBox[{"digits", ",", "7"}], "]"}], "]"}], "]"}]}]}], "\n", 
        "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{"SetAttributes", "[", 
    RowBox[{"StringTruncate", ",", "Listable"}], "]"}], "\n", "\n", 
   RowBox[{
    RowBox[{"SymmetricQ", "[", "mat_", "]"}], " ", ":=", " ", 
    RowBox[{"TrueQ", "[", 
     RowBox[{
      RowBox[{"MatrixQ", "[", "mat", "]"}], " ", "&&", " ", 
      RowBox[{"mat", " ", "==", " ", 
       RowBox[{"Transpose", "[", "mat", "]"}]}]}], "]"}]}]}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduceRank", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"MatrixQ", "[", "x", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"Dimensions", "[", "x", "]"}], "]"}], "==", "1"}], ")"}]}], "||",
      "\n", "\t", 
     RowBox[{
      RowBox[{"VectorQ", "[", "x", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "x", "]"}], "==", "1"}], ")"}]}]}], ",", "\n", 
    "\t", 
    RowBox[{"Return", "[", 
     RowBox[{"x", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
    RowBox[{"Return", "[", "x", "]"}]}], " ", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lag", "[", 
    RowBox[{"list_", ",", 
     RowBox[{"n_:", "1"}], ",", 
     RowBox[{"m_:", "Null"}], ",", "opts___"}], "]"}], " ", ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "r", ",", "temp", ",", "label", ",", 
       RowBox[{"heldList", "=", 
        RowBox[{"HoldForm", "[", "list", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t\t\t\t", 
       RowBox[{"first", "=", 
        RowBox[{"StringMatchQ", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"list", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\"\<*_*\>\""}], 
         "]"}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"n", "==", "Null"}], "]"}], ",", 
        RowBox[{"r", "=", "1"}], ",", 
        RowBox[{"r", "=", "n"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"m", "<", "r"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"lag", "::", "mltn"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"VectorQ", "[", "list", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"lag", "::", "vec"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{
          RowBox[{"labels", "/.", 
           RowBox[{"{", "opts", "}"}]}], "/.", 
          RowBox[{"Options", "[", "lag", "]"}]}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{"first", ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"label", " ", "=", " ", 
            RowBox[{"ToString", "[", 
             RowBox[{"list", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", "\t\t\t", 
           RowBox[{"temp", " ", "=", " ", 
            RowBox[{"Drop", "[", 
             RowBox[{"list", ",", "1"}], "]"}]}]}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"label", " ", "=", " ", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<_\>\"", ",", 
              RowBox[{"ToString", "[", "heldList", "]"}]}], "]"}]}], ";", 
           "\n", "\t\t\t", 
           RowBox[{"temp", " ", "=", " ", "list"}]}]}], "\n", "\t\t", "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"first", ",", "\n", "\t\t\t", 
           RowBox[{"temp", " ", "=", " ", 
            RowBox[{"Drop", "[", 
             RowBox[{"list", ",", "1"}], "]"}]}], ",", "\n", "\t\t\t", 
           RowBox[{"temp", " ", "=", " ", "list"}]}], "\n", "\t\t", "]"}], 
         ";", "\n", "\t\t", 
         RowBox[{"label", " ", "=", " ", 
          RowBox[{"{", "}"}]}]}]}], "\n", "\t", "]"}], ";", "\n", "\t\t", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"m", "==", "Null"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Which", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"r", "<", "0"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{
               RowBox[{"labels", "/.", 
                RowBox[{"{", "opts", "}"}]}], "/.", 
               RowBox[{"Options", "[", "lag", "]"}]}], "]"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"label", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"StringJoin", "[", 
                RowBox[{"label", ",", "\"\<(\>\"", ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"-", "r"}], "]"}], ",", "\"\<)\>\""}], "]"}], 
               "}"}]}]}], "\n", "\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t", 
           RowBox[{"temp", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{"label", ",", 
              RowBox[{"Drop", "[", 
               RowBox[{"temp", ",", 
                RowBox[{"-", "r"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"lagValue", "/.", 
                  RowBox[{"{", "opts", "}"}]}], "/.", 
                 RowBox[{"Options", "[", "lag", "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"-", "r"}], "}"}]}], "]"}]}], "]"}]}]}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"r", "==", "0"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{
               RowBox[{"labels", "/.", 
                RowBox[{"{", "opts", "}"}]}], "/.", 
               RowBox[{"Options", "[", "lag", "]"}]}], "]"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"label", " ", "=", " ", 
              RowBox[{"{", "label", "}"}]}]}], "\n", "\t\t\t\t", "]"}], ";", 
           "\n", "\t\t\t\t", 
           RowBox[{"temp", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{"label", ",", "temp"}], "]"}]}]}], ",", "\n", "\t\t\t", 
          RowBox[{"r", ">", "0"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{
               RowBox[{"labels", "/.", 
                RowBox[{"{", "opts", "}"}]}], "/.", 
               RowBox[{"Options", "[", "lag", "]"}]}], "]"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"label", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"StringJoin", "[", 
                RowBox[{"label", ",", "\"\<(\>\"", ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"-", "r"}], "]"}], ",", "\"\<)\>\""}], "]"}], 
               "}"}]}]}], "\n", "\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t", 
           RowBox[{"temp", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{"label", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"lagValue", "/.", 
                  RowBox[{"{", "opts", "}"}]}], "/.", 
                 RowBox[{"Options", "[", "lag", "]"}]}], ",", 
                RowBox[{"{", "r", "}"}]}], "]"}], ",", 
              RowBox[{"Drop", "[", 
               RowBox[{"temp", ",", 
                RowBox[{"-", "r"}]}], "]"}]}], "]"}]}]}]}], "\n", "\t\t", 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"lag", "[", 
            RowBox[{"list", ",", "i", ",", "Null", ",", "opts"}], "]"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "r", ",", "m"}], "}"}]}], "]"}]}]}], "\n", "\t",
        "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "temp", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "lag", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"labels", "->", "True"}], ",", 
     RowBox[{"lagValue", "->", "Indeterminate"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"lag", ",", "HoldFirst"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lag", "::", "mltn"}], " ", ":=", " ", 
   "\"\<End of range before beginning.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lag", "::", "vec"}], " ", ":=", " ", 
   "\"\<First argument must be a vector.\>\""}], ";"}]}], "Code",
 InitializationCell->True,
 CellAutoOverwrite->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"delta", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"n_:", "1"}], ",", "opts___"}], "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "temp"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{"n", "==", "Null"}], "]"}], ",", 
       RowBox[{"r", "=", "1"}], ",", 
       RowBox[{"r", "=", "n"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{
       RowBox[{"lag", "[", 
        RowBox[{"x", ",", "0", ",", "Null", ",", "opts"}], "]"}], " ", "-", 
       " ", 
       RowBox[{"lag", "[", 
        RowBox[{"x", ",", "r", ",", "Null", ",", "opts"}], "]"}]}]}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", 
        RowBox[{
         RowBox[{"labels", "/.", 
          RowBox[{"{", "opts", "}"}]}], "/.", 
         RowBox[{"Options", "[", "lag", "]"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"temp", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<Delta(\>\"", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"-", "r"}], "]"}], ",", "\"\<)\>\"", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}]}]}], "\n", 
      "\t", "]"}], ";", "\n", "\t", 
     RowBox[{"Return", "[", "temp", "]"}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"delta", ",", "HoldFirst"}], "]"}], ";"}]}], "Code",
 InitializationCell->True,
 CellAutoOverwrite->False,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Adjoin", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nx", ",", "ny", ",", "m"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Adjoin", "::", "nMat"}], " ", "=", " ", 
      "\"\<inputs must be matrices\>\""}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"Adjoin", "::", "wrSz"}], " ", "=", " ", 
      "\"\<inputs must have same number of rows\>\""}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MatrixQ", "[", "x", "]"}], " ", "&&", " ", 
        RowBox[{"MatrixQ", "[", "y", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nx", ",", "m"}], "}"}], " ", "=", " ", 
         RowBox[{"Dimensions", "[", "x", "]"}]}], ";", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ny", ",", "m"}], "}"}], " ", "=", " ", 
         RowBox[{"Dimensions", "[", "y", "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"Adjoin", "::", "nMat"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nx", " ", "!=", " ", "ny"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"Adjoin", "::", "wrSz"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "False", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"Range", "[", "ny", "]"}]}], "]"}]}], "\n", "\t", "]"}]}]}], 
   "\n", "]"}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{"this", " ", "function", " ", "requires", " ", 
     RowBox[{"DataPrep", "[", "]"}], " ", "and", " ", "the", " ", "messages", 
     "\n", "from", " ", "the", " ", 
     RowBox[{"Call", "[", "]"}], " ", "function"}]}], " ", "*)"}], "\n", "\n",
   
  RowBox[{
   RowBox[{
    RowBox[{"Name", "[", "x_", "]"}], " ", ":=", "\n", "\t", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"heldx", "=", 
         RowBox[{"HoldForm", "[", "x", "]"}]}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"First", "[", "x", "]"}], "]"}], ",", "\"\<*_*\>\""}], 
          "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"x", ",", "1"}], "]"}], ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<_\>\"", ",", 
             RowBox[{"ToString", "[", "heldx", "]"}]}], "]"}]}], "]"}], ",", 
         "\n", "\t\t\t", 
         RowBox[{"Prepend", "[", 
          RowBox[{"x", ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<_\>\"", ",", 
             RowBox[{"ToString", "[", "heldx", "]"}]}], "]"}]}], "]"}]}], 
        "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], "/;", 
     RowBox[{"VectorQ", "[", "x", "]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"Name", ",", "HoldAll"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Name", "[", "x_", "]"}], " ", ":=", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"heldx", "=", 
         RowBox[{"HoldForm", "[", "x", "]"}]}], ",", 
        RowBox[{"temp", " ", "=", " ", "x"}], ",", "p", ",", "i", ",", 
        "base"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MatrixQ", "[", "temp", "]"}], "&&", 
          RowBox[{"Apply", "[", 
           RowBox[{"Greater", ",", 
            RowBox[{"Dimensions", "[", "temp", "]"}]}], "]"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"temp", " ", "=", " ", 
          RowBox[{"Transpose", "[", "temp", "]"}]}]}], "\n", "\t", "]"}], ";",
        "\n", "\t", 
       RowBox[{"p", " ", "=", " ", 
        RowBox[{"Length", "[", "temp", "]"}]}], ";", "\n", "\t", 
       RowBox[{"base", " ", "=", " ", 
        RowBox[{"ToString", "[", "heldx", "]"}]}], ";", "\n", "\t", 
       RowBox[{"Do", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"VectorQ", "[", 
              RowBox[{"temp", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{"Call", "::", "nvec"}], ",", "i"}], "]"}], ";", "\n", 
             "\t\t\t", 
             RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t\t", "]"}], 
          ";", "\n", "\t\t", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"DataPrep", "[", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", "\n", "\t\t\t\t\t  ", 
             
             RowBox[{"StringJoin", "[", 
              RowBox[{"base", ",", "\"\<[\>\"", ",", 
               RowBox[{"ToString", "[", "i", "]"}], ",", "\"\<]\>\""}], 
              "]"}]}], "]"}]}]}], ",", "\n", "\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", "p"}], "}"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"Return", "[", "temp", "]"}]}]}], "\n", "]"}]}]}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"UnName", "[", "x_", "]"}], " ", ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"StringMatchQ", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"First", "[", "x", "]"}], "]"}], ",", "\"\<*_*\>\""}], "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"Drop", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", "\n", "\t\t", "x"}], "\n", "\t", 
    "]"}], "/;", 
   RowBox[{"VectorQ", "[", "x", "]"}]}]}]], "Code",
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Call", "[", 
    RowBox[{"x_", ",", "label_"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"DataPrep", "[", 
     RowBox[{"x", ",", 
      RowBox[{"ToString", "[", 
       RowBox[{"HoldForm", "[", "label", "]"}], "]"}]}], "]"}], "/;", 
    RowBox[{"VectorQ", "[", "x", "]"}]}]}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Call", "[", 
    RowBox[{"x_", ",", "label__"}], "]"}], " ", ":=", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "x"}], ",", "p", ",", "i", ",", 
       "commas", ",", 
       RowBox[{"ids", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"HoldForm", "[", 
          RowBox[{"{", "label", "}"}], "]"}], "]"}]}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"p", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"commas", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"ids", ",", "\"\<,\>\""}], "]"}], ",", "\n", "\t\t", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"StringLength", "[", "ids", "]"}], ",", "0"}], "}"}], 
             "}"}]}], "]"}]}], "]"}], "-", "1"}]}], ";", "\n", "\t", 
      RowBox[{"ids", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"ids", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"commas", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "2"}], ",", 
             RowBox[{
              RowBox[{"commas", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
              "1"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "p"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MatrixQ", "[", "data", "]"}], "&&", 
         RowBox[{"Apply", "[", 
          RowBox[{"Greater", ",", 
           RowBox[{"Dimensions", "[", "data", "]"}]}], "]"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{"data", " ", "=", " ", 
         RowBox[{"Transpose", "[", "data", "]"}]}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], " ", "!=", " ", "p"}], ")"}],
          "||", 
         RowBox[{"VectorQ", "[", "data", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"Call", "::", "ulen"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t", "]"}], ";", 
      "\n", "\t", 
      RowBox[{"Do", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"VectorQ", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"Call", "::", "nvec"}], ",", "i"}], "]"}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"Return", "[", "False", "]"}]}]}], "\n", "\t\t", "]"}], 
         ";", "\n", "\t\t", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"DataPrep", "[", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"ids", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", "p"}], "}"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "data", "]"}]}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"Call", ",", "HoldRest"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Call", "::", "ulen"}], " ", ":=", " ", 
   "\"\<Number of series and names not equal.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Call", "::", "nvec"}], " ", ":=", " ", 
    "\"\<Data series `1` not a vector.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DataPrep", "[", 
   RowBox[{"x_", ",", "label_"}], "]"}], " ", ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"StringMatchQ", "[", 
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"First", "[", "x", "]"}], "]"}], ",", "\"\<*_*\>\""}], "]"}], 
    ",", "\n", "\t\t", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"x", ",", "1"}], "]"}], ",", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<_\>\"", ",", "label"}], "]"}]}], "]"}], ",", "\n", "\t\t",
     
    RowBox[{"Prepend", "[", 
     RowBox[{"x", ",", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<_\>\"", ",", "label"}], "]"}]}], "]"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 InitializationCell->True,
 AspectRatioFixed->True]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "added", " ", "to", " ", "bridge", " ", 
     "the", " ", "old", " ", 
     RowBox[{"SingularValues", "[", "]"}]}], ",", " ", 
    RowBox[{"being", " ", "phased", " ", "out", " ", "my", " ", 
     RowBox[{"Mma", "."}]}], ",", " ", "\n", 
    RowBox[{"with", " ", "the", " ", "new", " ", 
     RowBox[{"SingularValueDecomposition", "[", "]"}], " ", "to", " ", 
     "allow", " ", "the", " ", "original", " ", "function", " ", "calls", " ",
      "to", " ", "\n", "remain", " ", "transparently", " ", 
     RowBox[{"intact", "."}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "singularValues", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{"tolerance", " ", "\[Rule]", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"singularValues", "[", 
     RowBox[{"x_", ",", "opts___"}], "]"}], " ", ":=", " ", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "u", ",", "d", ",", "v"}], "}"}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"k", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{"Dimensions", "[", "x", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", "d", ",", "v"}], "}"}], " ", "=", " ", 
        RowBox[{"SingularValueDecomposition", "[", 
         RowBox[{"x", ",", "k", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Tolerance", " ", "\[Rule]", " ", "tolerance"}], "/.", 
            RowBox[{"{", "opts", "}"}]}], "/.", 
           RowBox[{"Options", "[", "singularValues", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", 
             RowBox[{"#", ",", "#"}], "]"}], "]"}], "&"}], ",", 
          RowBox[{"Range", "[", "k", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Transpose", "[", "u", "]"}], ",", "d", ",", 
          RowBox[{"Transpose", "[", "v", "]"}]}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.415146019469192*^9, 3.415146054400868*^9}, {
   3.415146095996786*^9, 3.415146195341827*^9}, {3.415146226281301*^9, 
   3.415146244199643*^9}, {3.4151462779931726`*^9, 3.415146466321601*^9}, {
   3.4151465400689487`*^9, 3.4151465861735497`*^9}, {3.4151467112581263`*^9, 
   3.4151467317544613`*^9}, {3.415147027468384*^9, 3.415147030059783*^9}, 
   3.415147086990056*^9, {3.415147230315248*^9, 3.415147235362432*^9}, {
   3.415147307413919*^9, 3.415147315829118*^9}, {3.41514736558604*^9, 
   3.4151473836313457`*^9}, {3.415147420700078*^9, 3.415147421912457*^9}, {
   3.415148893004648*^9, 3.415148907728826*^9}, {3.415148972973686*^9, 
   3.41514902997314*^9}, {3.415149094688438*^9, 3.41514920476366*^9}, {
   3.415149552239584*^9, 3.415149562396928*^9}, {3.415149624923394*^9, 
   3.4151496298087807`*^9}, {3.415149713830348*^9, 3.4151497710776653`*^9}, 
   3.4151498740004187`*^9, {3.415149915645274*^9, 3.415149935243575*^9}, {
   3.4151500894250927`*^9, 3.415150122745584*^9}, {3.415180851944043*^9, 
   3.415180878249193*^9}, {3.415185258722274*^9, 3.415185263735483*^9}, {
   3.415185308825057*^9, 3.415185313273077*^9}, {3.415188513596768*^9, 
   3.41518852334533*^9}, {3.4152711796486063`*^9, 3.415271260647605*^9}, {
   3.415271310449555*^9, 3.41527138895752*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", 
    RowBox[{
    "displayOutput", ",", "varDCom", ",", "returnValues", ",", "Level1", ",", 
     "\n", "\t", "Level2", ",", "displayDigits", ",", "varCovMatrix", ",", 
     "White", ",", "OLS", ",", "\n", "\t", "algorithm", ",", "QR", ",", "SVD",
      ",", "labels", ",", "lagValue"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", 
    RowBox[{
    "Reg", ",", "TwoStage", ",", "IV", ",", "MixedEstimation", ",", "lag", 
     ",", "delta", ",", "\n", "\t", "UnName", ",", "Name", ",", "Call"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Code",
 InitializationCell->True,
 CellAutoOverwrite->False,
 AspectRatioFixed->True]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{745, 503},
WindowMargins->{{Automatic, 270}, {Automatic, 75}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
MacintoshSystemPageSetup -> \
"00<0001804P000000]P2:?oQon82n@960dL5:0?l0080001804P000000]P2:001\n\
0000I00000400`<300000BL?00400@00000000000000060801T1T00000000000\n\
00000000000000000000000000000000",
CharacterEncoding->"MacintoshAutomaticEncoding",
FrontEndVersion->"6.0 for Mac OS X x86 (32-bit) (April 20, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 1358, 25, 430, "Input",
 InitializationCell->True],
Cell[1929, 48, 4868, 73, 866, "Text",
 Evaluatable->False],
Cell[6800, 123, 136, 3, 43, "Code",
 InitializationCell->True],
Cell[6939, 128, 6648, 154, 1574, "Code",
 InitializationCell->True],
Cell[13590, 284, 125, 3, 43, "Code",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[13740, 291, 2977, 74, 374, "Code",
 InitializationCell->True],
Cell[16720, 367, 932, 28, 119, "Code",
 InitializationCell->True],
Cell[17655, 397, 1007, 28, 134, "Code",
 InitializationCell->True],
Cell[18665, 427, 893, 24, 134, "Code",
 InitializationCell->True],
Cell[19561, 453, 3501, 84, 449, "Code",
 InitializationCell->True],
Cell[23065, 539, 6101, 141, 779, "Code",
 InitializationCell->True],
Cell[29169, 682, 2910, 74, 404, "Code",
 InitializationCell->True],
Cell[32082, 758, 620, 18, 119, "Code",
 InitializationCell->True],
Cell[32705, 778, 4693, 116, 494, "Code",
 InitializationCell->True],
Cell[37401, 896, 3506, 98, 269, "Code",
 InitializationCell->True],
Cell[40910, 996, 7660, 188, 569, "Code",
 InitializationCell->True],
Cell[48573, 1186, 5830, 142, 644, "Code",
 InitializationCell->True],
Cell[54406, 1330, 5138, 131, 689, "Code",
 InitializationCell->True],
Cell[59547, 1463, 7981, 197, 914, "Code",
 InitializationCell->True],
Cell[67531, 1662, 1916, 51, 269, "Code",
 InitializationCell->True],
Cell[69450, 1715, 827, 23, 119, "Code",
 InitializationCell->True],
Cell[70280, 1740, 2565, 65, 284, "Code",
 InitializationCell->True],
Cell[72848, 1807, 1106, 32, 134, "Code",
 InitializationCell->True],
Cell[73957, 1841, 461, 12, 74, "Code",
 InitializationCell->True],
Cell[74421, 1855, 9661, 226, 1049, "Code",
 InitializationCell->True],
Cell[84085, 2083, 1246, 34, 134, "Code",
 InitializationCell->True],
Cell[85334, 2119, 10788, 270, 1454, "Code",
 InitializationCell->True],
Cell[96125, 2391, 1958, 51, 284, "Code",
 InitializationCell->True],
Cell[98086, 2444, 1628, 40, 239, "Code",
 InitializationCell->True],
Cell[99717, 2486, 6437, 153, 809, "Code",
 InitializationCell->True],
Cell[106157, 2641, 8805, 219, 944, "Code",
 InitializationCell->True],
Cell[114965, 2862, 6106, 163, 629, "Code",
 InitializationCell->True],
Cell[121074, 3027, 768, 24, 74, "Code",
 InitializationCell->True],
Cell[121845, 3053, 7903, 197, 824, "Code",
 InitializationCell->True],
Cell[129751, 3252, 1769, 49, 179, "Code",
 InitializationCell->True],
Cell[131523, 3303, 2018, 53, 269, "Code",
 InitializationCell->True],
Cell[133544, 3358, 3930, 101, 449, "Code",
 InitializationCell->True],
Cell[137477, 3461, 545, 16, 104, "Code",
 InitializationCell->True],
Cell[138025, 3479, 5350, 150, 539, "Code",
 InitializationCell->True]
}, Open  ]],
Cell[143390, 3632, 3701, 78, 224, "Code"],
Cell[147094, 3712, 822, 22, 179, "Code",
 InitializationCell->True]
}
]
*)

(* End of internal cache information *)
