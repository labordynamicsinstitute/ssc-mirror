{smcl}
{* *! version 1.0.0 26Sep2024}{...}
{title:Title}

{p2colset 5 13 14 2}{...}
{p2col:{hi:csum} {hline 2}} Cumulative sum (CUSUM) charts for monitoring clinical performance {p_end}
{p2colreset}{...}


{marker syntax}{...}
{title:Syntax}

{p 8 14 2}
{cmd:csum}
{it:{help varname:yvar}} 
{it:{help varname:xvar}}
{ifin}
,
{opt blp:rob(#)}
[ 
{opt odds(#)}
{opt l:imit(#)}
{opt r:eps(#)}
{opt seed(#)}
{opt cen:tile(#)}
{opt w:t}{cmd:(}{it:{help varname:varname}{cmd:})}
{opt repl:ace} 
{opt no:graph} 
{it:{help twoway_options:twoway_options}}
]

{pstd}
{it:yvar} must be binary 


{synoptset 26 tabbed}{...}
{synopthdr}
{synoptline}
{synopt :{opt blp:rob(#)}}baseline probability of failure (e.g. death, hospitalization); {cmd:blprob() is required}{p_end}
{synopt :{opt odds(#)}}odds of failure; default is to detect a doubling of the odds of failure {cmd:odds(2)}{p_end}
{synopt :{opt l:imit(#)}}control limit for signaling a change in performance; default is for {cmd:csum} to compute the limit using simulation{p_end}
{synopt :{opt r:eps(#)}}number of replications to be performed when computing {opt limit()}; default is {cmd:reps(50)}{p_end}
{synopt :{opt seed(#)}}set random-number seed to # when computing {opt limit()} using simulation {p_end}
{synopt :{opt cen:tile(#)}}set centile level for computing {opt limit()} using simulation; default is {cmd:centile(95)} {p_end}
{synopt :{opt w:t(varname)}}weights used for computing {opt CUSUM}; default is for {cmd:csum} to compute the weights{p_end}
{synopt :{opt repl:ace}}replace variables created by {cmd:csum}{p_end}
{synopt :{opt no:graph}}suppresses the plot {p_end}
{synopt :{it:{help twoway_options:twoway_options}}}any options documented in {manhelpi twoway_options G-3}{p_end}
{synoptline}
{p2colreset}{...}
{p 4 6 2}


{marker description}{...}
{title:Description}

{pstd}
{opt csum} produces a cumulative sum (CUSUM) chart for monitoring clinical performance over time, by signaling if sufficient evidence 
has accumulated to detect a change in the failure rate of the outcome (Steiner et al. 2000). The CUSUM 
procedure requires a binary {it:yvar} (where a value of 1 indicates failure and 0 indicates success), and a sequential 
{it:xvar} which typically represents sequential patient numbers or the passage of time. Process deterioration is detected 
when the CUSUM exceeds the {it:a priori} control limit in the positive direction. Similarly, process improvement is detected 
when the CUSUM exceeds the {it:a priori} control limit in the negative direction. See Steiner et al. (2000) for a comprehensive discussion 
about how CUSUM charts are produced and interpreted.

 

{title:Options}

{p 4 8 2} 
{cmd:blprob(#)} specifies the baseline rate of failure; {cmd:blprob() is required}. 

{p 4 8 2} 
{cmd:odds(#)} specifies the odds ratio used to detect a change in the outcome (e.g. death). For example, {cmd:odds(2)} is designed to detect
a doubling in the odds of failure (process deterioration), whereas {cmd:odds(.50)} is designed to detect halving the odds of failure 
(process improvement).

{p 4 8 2} 
{cmd:limit(#)} specifies the control limit. The point on the {it:xvar} where the CUSUM first exceeds the control limit is the start of 
the process being "out of control". The control limit may be guided by external expectations or regulatory requirements, or it can be
determined empirically using simulation. When {cmd:limit(#)} is not specified, {cmd:csum} generates random data based on existing sample
size, specified odds ratio and baseline probability of failure. The CUSUM is computed and the maximum CUSUM value is stored. This
process is repeated the number of times specified in {cmd:reps()}. Finally, the value corresponding to the specified {cmd:centile()} 
is computed. This value serves as the control limit. While a positive control limit is used to detect an increase in the failure rate, 
a negative control limit is used to detect a decrease in the failure rate (a negative control limit is used in congunction 
with a {cmd:odds()} below 1.0).   

{p 4 8 2} 
{cmd:reps(#)} the number of replications to be performed when computing {opt limit()}; default is {cmd:reps(50)}.

{p 4 8 2} 
{cmd:seed(#)} set random-number seed to # when computing {opt limit()} using simulation.

{p 4 8 2} 
{cmd:centile(#)} set centile level for computing {opt limit()} using simulation. The default is {cmd:centile(95)} 
for assessing process deterioration and {cmd:centile(5)} for assessing process improvement.

{p 4 8 2} 
{cmd:wt(varname)} specifies the weights used for computing {opt CUSUM}. The default is for {cmd:csum} to compute the weights.

{p 4 8 2} 
{cmd:replace} replaces the variables in the file created by {cmd:csum}. Three variables are created: {cmd:_wt} which is the
weight generated by {cmd:csum} or a replicate of those specified by the user in {cmd:wt()}; {cmd:_ct} which is the CUSUM; and
{cmd:_signal} which indicates at which point on the {it:xvar} the CUSUM exceeds the control limit.  

{p 4 8 2} 
{cmd:nograph} suppresses the plot.

{p 4 8 2} 
{it:{help twoway_options:twoway_options}} any options documented in {manhelpi twoway_options G-3}


{title:Examples}

{pstd}{opt Detecting process deterioration (increase in failure rate)}: {p_end}

{pmore} create synthetic data {p_end}
{pmore2}{cmd:. clear}{p_end}
{pmore2}{cmd:. set obs 1000}{p_end}
{pmore2}{cmd:. gen obs = _n}{p_end}
{pmore2}{cmd:. label var obs "Patient number"}{p_end}
{pmore2}{cmd:. gen y = rbinomial(1,.40)}{p_end}
{pmore2}{cmd:. label var y "Deaths"}{p_end}

{pmore} We generate a CUSUM chart to assess whether there was an increased failure 
rate over a sequential number of observations. We set the baseline failure rate
to 0.20 and we set the odds ratio to 2 in order to detect a doubling in the odds of 
failure. We allow {opt csum} to estimate the control limit at the 95th centile using 100 
repetitions. We see that the failure rate exceeds the control limit at patient number 68. {p_end}
{phang2}{cmd:. csum y obs, blp(0.20) seed(1234) reps(100) centile(95) replace odds(2)}{p_end}


{pstd}{opt Detecting process improvement (decrease in failure rate)}: {p_end}

{pmore} create synthetic data {p_end}
{pmore2}{cmd:. clear}{p_end}
{pmore2}{cmd:. set obs 1000}{p_end}
{pmore2}{cmd:. gen obs = _n}{p_end}
{pmore2}{cmd:. label var obs "Patient number"}{p_end}
{pmore2}{cmd:. gen y = rbinomial(1,.20)}{p_end}
{pmore2}{cmd:. label var y "Deaths"}{p_end}

{pmore} We generate a CUSUM chart to assess whether there was an decreased failure 
rate over a sequential number of observations. We set the baseline failure rate
to 0.40 and we set the odds ratio to 0.50 in order to detect a halving in the odds of 
failure. We allow {opt csum} to estimate the control limit at the 95th centile using 100 
repetitions. We see that the failure rate decreases beyond the control limit at patient 
number 55. {p_end}
{phang2}{cmd:. csum y obs, blp(0.40) seed(1234) reps(100) centile(95) replace odds(0.50)}{p_end}

{pmore} Here we manually set the limt to -20. {p_end}
{phang2}{cmd:. csum y obs, blp(0.40) limit(-20) replace odds(.5)}{p_end}



{marker results}{...}
{title:Stored results}

{pstd}
{cmd:csum} stores the following in {cmd:r()}:

{synoptset 10 tabbed}{...}
{p2col 5 10 14 2: Scalars}{p_end}
{synopt:{cmd:r(limit)}}the control limit{p_end}
{p2colreset}{...}



{title:References}

{p 4 8 2}
Steiner, S. H., Cook, R. J., Farewell, V. T. & T. Treasure. 2000. Monitoring surgical performance using risk-adjusted cumulative sum charts. 
{it:Biostatistics} 1: 441-452.{p_end}



{marker citation}{title:Citation of {cmd:csum}}

{p 4 8 2}{cmd:csum} is not an official Stata command. It is a free contribution
to the research community, like a paper. Please cite it as such: {p_end}

{p 4 8 2}
Linden A. (2024). CSUM: Stata module to compute cumulative sum (CUSUM) charts for monitoring clinical performance.



{title:Authors}

{p 4 4 2}
Ariel Linden{break}
President, Linden Consulting Group, LLC{break}
alinden@lindenconsulting.org{break}



{title:Also see}

{p 4 8 2} Online: {helpb cusum}{p_end}

