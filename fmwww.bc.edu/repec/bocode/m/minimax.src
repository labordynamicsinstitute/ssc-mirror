*
* MINIMAX NBEG NEND
* # <suppl. card> (list by name the independent variables
*                 and the dependent variable; the latter
*                 must be last on the list AND in the data
*                 matrix. Please do not list the CONSTANT
*                 since it is included automatically)
*
* THIS PROGRAM COMPUTES A LINEAR REGRESSION ACCORDING
* TO THE MINIMAX CRITERION: THE MAXIMUM ABSOLUTE RESIDUAL
* IS MINIMIZED USING THE DUAL SIMPLEX METHOD.
*
* NBEG IS THE FIRST OBSERVATION IN THE SAMPLE; NEND IS
* THE LAST OBSERVATION. ON COMPLETION, THE PROCEDURE
* DISPLAYS THE REGRESSION COEFFICIENTS (WITH THE
* CONSTANT IN LAST PLACE) AND THE MAXIMUM ABSOLUTE
* RESIDUAL.
*
PROCEDURE MINIMAX NBEG NEND
*
TYPE INTEGER NBEG NEND
LOCAL INTEGER NOBS NPAR I J K L JPIV IPIV LOOP
LOCAL REAL DPS RATMIN RATIO MMOBJ
LOCAL VECTOR[INTEGER] IV IBASIS
LOCAL VECTOR[REAL] B BCOEF
LOCAL REC[REAL] A
LOCAL SERIES[REAL] XVAR
*
ENTER(VARYING) IV
INQUIRE(MATRIX=IV) NPAR
COMPUTE NOBS = NEND-NBEG+1
DIM IV(NPAR) B(NPAR+3) BCOEF(NPAR) IBASIS(NPAR+1)
DIM A(NPAR+3,2*NOBS+NPAR+1)
*
* NOBS IS THE NUMBER OF OBSERVATIONS.
* NPAR IS THE NUMBER OF PARAMETERS TO BE ESTIMATED,
* INCLUDING A CONSTANT.
*
COMPUTE A = %CONST(0.0)
COMPUTE B = %CONST(0.0)
COMPUTE B(NPAR+1) = 1.0
COMPUTE L = 0
DOFOR XVAR = 1 TO NPAR-1
COMPUTE L = L+1
DO I = 1,NOBS
COMPUTE A(L,I) = XVAR(I)
COMPUTE A(L,NOBS+I) = -XVAR(I)
END DO I
END DOFOR
DOFOR XVAR = NPAR
DO I = 1,NOBS
COMPUTE A(NPAR+2,I) = XVAR(I)
COMPUTE A(NPAR+2,NOBS+I) = -XVAR(I)
END DO I
END DOFOR
DO I = 1,NOBS
COMPUTE A(NPAR,I) = 1.0
COMPUTE A(NPAR,NOBS+I) = -1.0
COMPUTE A(NPAR+1,I) = 1.0
COMPUTE A(NPAR+1,NOBS+I) = 1.0
END DO I
COMPUTE K = 2
DO J = 1,2*NOBS
DO I = 1,NPAR+1
COMPUTE A(NPAR+3,J) = A(NPAR+3,J) + A(I,J)
END DO I
END DO J
DO I = 1,NPAR+1
COMPUTE A(I,2*NOBS+I) = 1.0
COMPUTE IBASIS(I) = 0
COMPUTE B(NPAR+3) = B(NPAR+3) + B(I)
END DO I
DO LOOP = 1,1
:399 COMPUTE DPS = 0.0
DO J = 1,2*NOBS
IF A(NPAR+1+K,J)-DPS .LE. 0.0
BEGIN
BRANCH 410
END
COMPUTE DPS = A(NPAR+1+K,J)
COMPUTE JPIV = J
:410 END DO J
IF DPS-1.0E-06 .LE. 0.0
BEGIN
BRANCH 501
END
COMPUTE RATMIN = 1.0E+06
COMPUTE IPIV = NPAR+4
DO I = 1,NPAR+1
IF A(I,JPIV) .LE. 1.0E-06
BEGIN
BRANCH 470
END
COMPUTE RATIO = B(I)/A(I,JPIV)
IF RATIO .GE. RATMIN
BEGIN
BRANCH 470
END
COMPUTE RATMIN = RATIO
COMPUTE IPIV = I
:470 END DO I
IF K .EQ. 2
BEGIN
BRANCH 476
END
DO I = 1,NPAR+1
IF IBASIS(I) .NE. 0
BEGIN
BRANCH 475
END
IF ABS(A(I,JPIV)) .LE. 1.0E-06
BEGIN
BRANCH 475
END
COMPUTE IPIV = I
:475 END DO I
:476 COMPUTE PIVOT = A(IPIV,JPIV)
COMPUTE IBASIS(IPIV) = JPIV
IF IPIV .EQ. NPAR+4
BEGIN
BRANCH 496
END
DO I = 1,NPAR+1+K
IF I .EQ. IPIV
BEGIN
BRANCH 500
END
DO J = 1,2*NOBS+NPAR+1
IF J .EQ. JPIV
BEGIN
BRANCH 480
END
COMPUTE A(I,J) = A(I,J) -A(I,JPIV)*A(IPIV,J)/PIVOT
:480 END DO J
COMPUTE B(I) = B(I)-A(I,JPIV)*B(IPIV)/PIVOT
COMPUTE A(I,JPIV) = 0.0
:500 END DO I
DO J = 1,2*NOBS+NPAR+1
COMPUTE A(IPIV,J) = A(IPIV,J)/PIVOT
END DO J
COMPUTE B(IPIV) = B(IPIV)/PIVOT
BRANCH 399
:496 DISPLAY 'SOLUTION UNBOUNDED'
BRANCH 571
:501 IF K .EQ. 1
BEGIN
BRANCH 510
END
IF B(NPAR+3) .GT. 1.0E-03
BEGIN
DISPLAY 'NO FEASIBLE SOLUTION'
BRANCH 571
END
:504 COMPUTE K = 1
BRANCH 399
:510 DISPLAY '   '
:571 END DO LOOP
COMPUTE MMOBJ = -A(NPAR+2,2*NOBS+NPAR+1)
DISPLAY 'MINIMAX ABSOLUTE ERROR  ' MMOBJ
DISPLAY 'MINIMAX REGRESSION COEFFICIENTS, CONSTANT LAST'
DO I = 1,NPAR
COMPUTE BCOEF(I) = -A(NPAR+2,2*NOBS+I)
DISPLAY BCOEF(I)
END DO I
END MINIMAX
